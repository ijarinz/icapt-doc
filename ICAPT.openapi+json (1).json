{
  "openapi": "3.0.1",
  "info": {
    "title": "ICAPT",
    "description": "\n",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://icapt-api.azure-api.net"
    }
  ],
  "paths": {
    "/warehouses": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "List Warehouses",
        "description": "This method allow to retrieve a list of warehouses.",
        "operationId": "get-warehouses",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWarehousesResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "whse_num": "MAIN",
                      "whse_name": "Main Warehouse",
                      "whse_address": "ABC Street",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Create Warehouse",
        "description": "This method gives a Site admin the option to create warehouse for a given Site.\n\n### Warehouse Input Attributes:\nIn order to create a warehouse, the following are required field\n- **Warehouse**: The designated code given to the warehouse\n- **Description**: Description or full name of the warehouse\n- **Address**: The full address of the given warehouse",
        "operationId": "post-warehouses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "whse_num": "WH2",
                    "whse_name": "Warehouse2",
                    "address": "12, Kilenny Road"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "422": {
            "description": ""
          }
        }
      }
    },
    "/warehouses/{warehouse_id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Read Warehouse by ID",
        "description": "This method allow to retrieve a list of warehouses by warehoue ID.",
        "operationId": "get-warehouse-by-id",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "The Warehouse ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": ""
            }
          },
          {
            "name": "Auth",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "whse_num": "MAIN",
                      "whse_name": "Main Warehouse",
                      "whse_address": "ABC Street",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Warehouse not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Delete a Warehouse",
        "description": "This method gives a site the option to delete one warehouse from the Warehouses list.\n\n## Exception\nWarehouse is unable to delete if:\n\n- At least one location (item location/lot location) exist for warehouse.\n- If warehouse exist in at least one material transaction.\n- At least one PO Line /CO Line/Job/Job Material/Transfer Order  exists for warehouse \n\nThis warehouse will be immediately removed. This action is not reversible.",
        "operationId": "delete-a-warehouse",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "The Warehouse ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Warehouse",
        "operationId": "update-warehouse",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "The Warehouse ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "whse_num": "MAIN",
                      "whse_name": "Main Warehouse",
                      "whse_address": "ABC Street",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)"
          }
        },
        "description": "Use this method to change aspects of an existing warehouse.\n\nThese entities are read only :\n- id\n- whse_num\n- site_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "whse_name": "Main Warehouse",
                    "whse_address": "ABC Street"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Warehouse"
        ]
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "List Locations",
        "description": "This method will return the list of warehouse location from iCAPT.",
        "operationId": "list-locations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLocationsResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "loc_num": "L001",
                      "whse_num": "MAIN",
                      "loc_name": "Location 1",
                      "loc_type": "S",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create Location",
        "description": "This method will create a new location by sending a POST request.\n\n### Location Input Attributes:\nIn order to create a location, the following are required field\n- **Warehouse**: The warehouse of the location on\n- **Location**: The designated code given to the location\n- **Trans Type**: The function of the location. Stock - S, Quarantine - Q or Transit - T",
        "operationId": "create-location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "loc_num": "L001",
                    "whse_num": "MAIN",
                    "loc_name": "Location 1",
                    "loc_type": "S"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                },
                "examples": {
                  "example": {
                    "value": {
                      "loc_num": "L001",
                      "whse_num": "MAIN",
                      "loc_name": "Location 1",
                      "loc_type": "S",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location_id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Read Location by ID",
        "description": "This method will return the list of warehouse location from iCAPT by location ID.",
        "operationId": "location",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The Location ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Delete a Location",
        "description": "This method gives a site the option to delete one Location from the Locations list\n\n## Exception: \nLocation is unable to delete if:\n\n   - Location exists in Item Location / Lot Location\n\nThis location will be immediately removed. This action is not reversible.",
        "operationId": "5e831e59dea6bbe8a430f7bd",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The Location ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Location",
        "operationId": "update-location",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The Location ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                },
                "examples": {
                  "example": {
                    "value": {
                      "loc_num": "L001",
                      "whse_num": "MAIN",
                      "loc_name": "Location 1",
                      "loc_type": "S",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)"
          }
        },
        "description": "Use this method to update location.\n\nThese entities are read only :\n- whse_num\n- loc_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "loc_name": "L0001",
                    "loc_type": "S"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/items": {
      "post": {
        "tags": [
          "Item"
        ],
        "summary": "Create Item",
        "description": "This method gives a Site admin the option to create an Item for a given Site.\n\n### Items Input Attributes:\nIn order to create a new item, the following are required field\n- **Item Number**: The designated code given to the part/item\n- **Item Description**: The item description and may contain specifications/name of the item\n- **UOM**: The unit of measurement of the item. UOM defined must be exist in iCAPT\n- **Product Code**: Material classification. Product code defined must be exist in in iCAPT\n- **Unit Weight**: The expected mass per unit of part/item. The default UOM for weight is Kilogram (KG)\n- **Lot Tracked**: Item is lot tracked indicator. Lot tracked item must have lot number specified in all transactions\n- **Status**: Active status of item\n",
        "operationId": "create-item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "item_num": "I0003",
                    "item_desc": "6 inch block",
                    "uom": "EA",
                    "product_code": "FG-MA",
                    "lot_tracked": 1,
                    "unit_weight": 3,
                    "item_status": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "List Items",
        "description": "This method will return the list of items from iCAPT.",
        "operationId": "list-items",
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                },
                "examples": {
                  "example": {
                    "value": {
                      "item_num": "I0003",
                      "item_desc": "6 inch block",
                      "uom": "EA",
                      "product_code": "FG-MA",
                      "lot_tracked": 1,
                      "unit_weight": 3,
                      "item_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create Customer",
        "description": "This method gives a Site admin the option to create a Customer for a given Site.\n\n### Customer Input Attributes:\nIn order to create a customer, the following are required field\n- **Customer Code**: A unique code to identifies the customer\n- **Name**: Description/Name of customer\n- **Active Status**: Status of customer",
        "operationId": "create-customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "cust_num": "C0099",
                    "cust_name": "Three Trading Inc",
                    "cust_status": 1
                  }
                }
              }
            }
          },
          "description": ""
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "examples": {
                  "example": {
                    "value": {
                      "cust_num": "C0099",
                      "cust_name": "Three Trading Inc",
                      "cust_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": []
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List of Customers",
        "description": "The Customer List contains the collection of all customers the business is in conduct with. For a customer to be available in the system record, the customer details must be created and present within the Customer List. ",
        "operationId": "list-of-customers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "examples": {
                  "example": {
                    "value": {
                      "cust_num": "C0099",
                      "cust_name": "Three Trading Inc",
                      "cust_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/productcodes": {
      "post": {
        "tags": [
          "ProductCode"
        ],
        "summary": "Create Product Code",
        "description": "Use this method to create a new Product Code.\n\n### Product Code Input Attributes:\nIn order to create a product code, the following are required field\n- **Product Code**: The designated code given to the product classification. This \n- **Active**: IIndicator of availability. 0 - Inactive, 1 - Active\n",
        "operationId": "create-product-code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCodeRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "product_code": "FG-MA",
                    "product_desc": "Megatech-P100",
                    "product_status": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ProductCode"
        ],
        "summary": "List Product Codes",
        "description": "This method will return a list Product Codes from iCAPT.",
        "operationId": "list-product-codes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "product_code": "FG-MA",
                      "product_desc": "Megatech-P100",
                      "product_status": "1",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items/{item_id}": {
      "delete": {
        "tags": [
          "Item"
        ],
        "summary": "Delete an Item",
        "description": "This method gives a site the option to delete one Item from the Items list.\n\n## Exception : \nThe item is unable to delete if:\n   - Item location exists with Qty On Hand not 0\n   - At least one PO Line /CO Line/Job/Job Material/Transfer Order exists for the Item\n\nThis Item will be immediately removed. This action is not reversible.",
        "operationId": "5e82e36669167e6fe8436851",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "The Item ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Read Item by ID",
        "description": "This method allow to retrieve item properties by Item ID.",
        "operationId": "read-item-by-id",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "The Item ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                },
                "examples": {
                  "example": {
                    "value": {
                      "item_num": "I0003",
                      "item_desc": "6 inch block",
                      "uom": "EA",
                      "product_code": "FG-MA",
                      "lot_tracked": 1,
                      "unit_weight": 3,
                      "item_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Item",
        "operationId": "update-item",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "The Item ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                },
                "examples": {
                  "example": {
                    "value": {
                      "item_num": "I0003",
                      "item_desc": "6 inch block",
                      "uom": "EA",
                      "product_code": "FG-MA",
                      "lot_tracked": 1,
                      "unit_weight": 3,
                      "item_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "item_desc": "6 inch block",
                    "uom": "EA",
                    "product_code": "FG-MA",
                    "lot_tracked": 1,
                    "unit_weight": 3,
                    "item_status": 1
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing employee.\n\nThese entities are read only :\n- id\n- item_num\n- site_id",
        "tags": [
          "Item"
        ]
      }
    },
    "/productcodes/{productcode_id}": {
      "get": {
        "tags": [
          "ProductCode"
        ],
        "summary": "Read Product Code by ID",
        "description": "Use this method to get a Product Code list by product code ID.",
        "operationId": "read-product-code-by-id",
        "parameters": [
          {
            "name": "productcode_id",
            "in": "path",
            "description": "The Machine ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "product_code": "FG-MA",
                      "product_desc": "Megatech-P100",
                      "product_status": "1",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "ProductCode"
        ],
        "summary": "Delete Product Code",
        "description": "This method gives a site the option to delete one Product Code from theProduct Code list.\n\n## Exception\nProduct code is unable to delete if:\n\n- At least one Item/PO Line /CO Line/Job/Job Material/Transfer Order  exists for the product code\n\nThis Product Code will be immediately removed. This action is not reversible.",
        "operationId": "delete-product-code",
        "parameters": [
          {
            "name": "productcode_id",
            "in": "path",
            "description": "The Product Code ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Product Code",
        "operationId": "update-product-code",
        "parameters": [
          {
            "name": "productcode_id",
            "in": "path",
            "description": "The Machine ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "product_code": "FG-MA",
                      "product_desc": "Megatech-P100",
                      "product_status": "1",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing product code.\n\nThese entities are read only :\n- productcode_ID",
        "tags": [
          "ProductCode"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCodeRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "product_desc": "Megatech-P100",
                    "product_status": "1"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/reasoncodes": {
      "post": {
        "tags": [
          "ReasonCode"
        ],
        "summary": "Create Reason Code",
        "description": "This method gives a Site admin the option to create a reason code for a given Site.\n\n### Reason Code Input Attributes:\nIn order to create a reason code, the following are required field\n- **Transaction**: Transactions where the reason code is used\n- **Code**: Reason Code",
        "operationId": "create-reason-code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReasonCodeRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "reason_class": "MiscIssue",
                    "reason_code": "DMG",
                    "reason_desc": "Damage goods"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "405": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ReasonCode"
        ],
        "summary": "List Reason Codes",
        "description": "This method allow to retrieve a list of Reason Codes.",
        "operationId": "list-reason-codes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReasonCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "reason_class": "MiscIssue",
                      "reason_code": "DMG",
                      "reason_desc": "Damage goods",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchaseorders": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "List Purchase Order Lines",
        "description": "This method allow to retrieve a list Purchase Order lines from iCAPT.",
        "operationId": "list-purchase-order-lines",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login",
        "description": "Login to ICAPT to fetch bearer token",
        "operationId": "login",
        "parameters": [
          {
            "name": "Content-type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "multipart/form-data"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "example": "site=\"site_name\" name=\"username\" password=\"password\""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "token": "token"
                }
              }
            }
          }
        }
      }
    },
    "/reasoncodes/{reasoncode_id}": {
      "get": {
        "tags": [
          "ReasonCode"
        ],
        "summary": "Read Reason Code By ID",
        "description": "This method will return the list of reason code by reason code ID.",
        "operationId": "read-reason-code-by-id",
        "parameters": [
          {
            "name": "reasoncode_id",
            "in": "path",
            "description": "The Reason Code ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReasonCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "reason_class": "MiscIssue",
                      "reason_code": "DMG",
                      "reason_desc": "Damage goods",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReasonCode"
        ],
        "summary": "Delete Reason Code",
        "description": "This method gives a site the option to delete one Reason Code from the Reason Codes list.\n\n## Exception\nReason code is unable to delete if:\n\n- At least one material/machine/job transaction exists for the reason code\n\nReason code will be immediately removed. This action is not reversible.",
        "operationId": "delete-reason-code",
        "parameters": [
          {
            "name": "reasoncode_id",
            "in": "path",
            "description": "The Reason Code ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Reason Code",
        "operationId": "update-reason-code",
        "parameters": [
          {
            "name": "reasoncode_id",
            "in": "path",
            "description": "The Reason Code ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReasonCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "reason_class": "MiscIssue",
                      "reason_code": "DMG",
                      "reason_desc": "Damage goods",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing reason code.\n\nThese entities are read only :\n- reason_class\n- reasoncode_ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReasonCodeRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "reason_desc": "Damage goods"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ReasonCode"
        ]
      }
    },
    "/workcenters": {
      "post": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Create Work Centers",
        "description": "This method gives a Site admin the option to create work center for a given Site.\n\n### Work Center Input Attributes:\nIn order to create a warehouse, the following are required field\n- **Work Center**: The designated code given to the work center\n- **Active**: Indicate the active status of work center. 0 - Inactive, 1 - Active",
        "operationId": "create-work-centers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkCenterRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "wc_num": "ASSY-01",
                    "wc_desc": "Assembly Station 1",
                    "wc_status": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "List Work Centers",
        "description": "This method allow to retrieve a list of work centers.",
        "operationId": "list-work-centers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                },
                "examples": {
                  "example": {
                    "value": {
                      "wc_num": "ASSY-01",
                      "wc_desc": "Assembly Station 1",
                      "wc_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workcenters/{workcenter_id}": {
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Read Work Center by ID",
        "description": "This method allow to retrieve a list of work center by work center ID.",
        "operationId": "read-work-center-by-id",
        "parameters": [
          {
            "name": "workcenter_id",
            "in": "path",
            "description": "The Work Center ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                },
                "examples": {
                  "example": {
                    "value": {
                      "wc_num": "ASSY-01",
                      "wc_desc": "Assembly Station 1",
                      "wc_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Delete Work Center",
        "description": "This method gives a site the option to delete one work center from the Work Centers list if\n\n## Exception\nWork Center is unable to delete if:\n\n- Work Center exists in any Job Route\n\nThis work center will be immediately removed. This action is not reversible.",
        "operationId": "delete-work-center",
        "parameters": [
          {
            "name": "workcenter_id",
            "in": "path",
            "description": "The Work Center ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Work Center",
        "operationId": "update-work-center",
        "parameters": [
          {
            "name": "workcenter_id",
            "in": "path",
            "description": "The Work Center ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                },
                "examples": {
                  "example": {
                    "value": {
                      "wc_num": "ASSY-01",
                      "wc_desc": "Assembly Station 1",
                      "wc_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing work center.\n\nThese entities are read only :\n- workcenter_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkCenterRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "wc_desc": "Assembly Station 1",
                    "wc_status": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "WorkCenter"
        ]
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Read Customers by ID",
        "description": "This method allow to retrieve the customer properties by customer ID.",
        "operationId": "read-customers-by-id",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "examples": {
                  "example": {
                    "value": {
                      "cust_num": "C0099",
                      "cust_name": "Three Trading Inc",
                      "cust_status": 1,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete a Customer",
        "description": "This method gives a site the option to delete one Customer from the Customers list.\n\n## Exception: \nCustomer is unable to delete if:\n   - Customer exists in Customer Order Item\n\nThis Customer will be immediately removed. This action is not reversible.",
        "operationId": "delete-a-customer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Customer",
        "operationId": "update-customers",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "The Customer ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": "Use this method to change aspects of an existing customer.\n\nThese entities are read only :\n- id\n- cust_num\n- site_id\n",
        "tags": [
          "Customer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "cust_name": "Three Trading Inc",
                    "cust_status": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/uoms": {
      "post": {
        "tags": [
          "UOM"
        ],
        "summary": "Create UOM",
        "description": "This method gives a Site admin the option to create UOM for a given Site.\n\n### UOM Input Attributes:\nIn order to create a UOM, the following are required field\n- **UOM**: The designated code given to the unit of measurement\n- **Description**: Description of the UOM\n- **Rounding Decimals**: Determines the number of decimal places the unit of measurement",
        "operationId": "create-uom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUOMRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "uom_num": "KG",
                    "uom_desc": "Kilogram",
                    "rounding": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "UOM"
        ],
        "summary": "List UOM",
        "description": "Use this method to retrievve the List of UOM from iCAPT.",
        "operationId": "list-uom",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOM"
                },
                "examples": {
                  "example": {
                    "value": {
                      "uom_num": "KG",
                      "uom_desc": "Kilogram",
                      "rounding": 2,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/uoms/{uom_id}": {
      "get": {
        "tags": [
          "UOM"
        ],
        "summary": "Read UOM by ID",
        "description": "Use this method to retrievve the List of UOM from iCAPT by UOM ID.",
        "operationId": "read-uom-by-id",
        "parameters": [
          {
            "name": "uom_id",
            "in": "path",
            "description": "The UOM ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOM"
                },
                "examples": {
                  "example": {
                    "value": {
                      "uom_num": "KG",
                      "uom_desc": "Kilogram",
                      "rounding": 2,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UOM"
        ],
        "summary": "Delete UOM",
        "description": "This method gives a site the option to delete one UOM from the UOM list.\n\n## Exception\nUOM is unable to delete if:\n\n- At least one Item/PO Line /CO Line/Job/Job Material/Transfer Order  exists for the UOM\n\nThis UOM will be immediately removed. This action is not reversible.",
        "operationId": "delete-uom",
        "parameters": [
          {
            "name": "uom_id",
            "in": "path",
            "description": "The UOM ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update UOM",
        "operationId": "update-uom",
        "parameters": [
          {
            "name": "uom_id",
            "in": "path",
            "description": "The UOM ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UOM"
                },
                "examples": {
                  "example": {
                    "value": {
                      "uom_num": "KG",
                      "uom_desc": "Kilogram",
                      "rounding": 2,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing UOM.\n\nThese entities are read only :\n- UOM_ID",
        "tags": [
          "UOM"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUOMRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "uom_desc": "Kilogram",
                    "rounding": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create Tasks",
        "description": "This method gives a Site admin the option to create a task for a given Site.\n\n### Reason Code Input Attributes:\nIn order to create a task, the following are required field\n- **Code**: Indirect task code\n- **Description**: Description of the indirect task",
        "operationId": "create-tasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "task_name": "KAIZEN",
                    "task_desc": "Kaizen Activity"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "List Tasks",
        "description": "This method allow to retrieve a list of task.",
        "operationId": "list-tasks",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "example": {
                    "value": {
                      "task_name": "KAIZEN",
                      "task_desc": "Kaizen Activity",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Read Tasks by ID",
        "description": "This method allow to retrieve a list of task by task ID.",
        "operationId": "read-tasks-by-id",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The Task ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "example": {
                    "value": {
                      "task_name": "KAIZEN",
                      "task_desc": "Kaizen Activity",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete Task",
        "description": "This method gives a site the option to delete one Task from the Task list.\n\n## Exception\nTask is unable to delete if:\n\n- Indirect task exist in at least one job transaction\n\nTask will be immediately removed. This action is not reversible.",
        "operationId": "delete-task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "operationId": "update-task",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "The Task ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                },
                "examples": {
                  "example": {
                    "value": {
                      "task_name": "KAIZEN",
                      "task_desc": "Kaizen Activity",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing task.\n\nThese entities are read only :\n- task_ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "task_desc": "Kaizen Activity"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/vendors": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create Vendors",
        "description": "This method gives a Site admin the option to create vendors for a given Site.\n\n### Vendor Input Attributes:\nIn order to create a vendor, the following are required field\n- **Vendor Code**: The designated code given to the vendor\n- **Vendor Name**: Description or full name of the vendor\n- **Active**: Indicate the active status of vendor. 0 - Inactive, 1 - Active",
        "operationId": "create-vendors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "vend_num": "V0001",
                    "vend_name": "MPH",
                    "vend_status": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "List Vendors",
        "description": "This method allow to retrieve a list of vendors.",
        "operationId": "list-vendors",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                },
                "examples": {
                  "example": {
                    "value": {
                      "vend_num": "V0001",
                      "vend_name": "MPH",
                      "vend_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{vendor_id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Read Vendor by ID",
        "description": "This method allow to retrieve a list of vendors by vendor ID.",
        "operationId": "read-vendors-by-id",
        "parameters": [
          {
            "name": "vendor_id",
            "in": "path",
            "description": "The Vendors ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                },
                "examples": {
                  "example": {
                    "value": {
                      "vend_num": "V0001",
                      "vend_name": "MPH",
                      "vend_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Delete Vendor",
        "description": "This method gives a site the option to delete one Vendor from the Vendors list.\n\n## Exception\nVendor is unable to delete if:\n\n- Purchase Order exists for this Vendor\n\nVendor will be immediately removed. This action is not reversible.",
        "operationId": "delete-vendor",
        "parameters": [
          {
            "name": "vendor_id",
            "in": "path",
            "description": "The Vendors ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Vendor",
        "operationId": "update-vendor",
        "parameters": [
          {
            "name": "vendor_id",
            "in": "path",
            "description": "The Vendors ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                },
                "examples": {
                  "example": {
                    "value": {
                      "vend_num": "V0001",
                      "vend_name": "MPH",
                      "vend_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing vendor.\n\nThese entities are read only :\n- vendor_ID",
        "tags": [
          "Vendor"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "vend_name": "MPH",
                    "vend_status": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itemlocs": {
      "post": {
        "tags": [
          "ItemLocation"
        ],
        "summary": "Create Item Locations",
        "description": "This method gives a Site admin the option to create an Item Location for a given Site.\n\n### Items Location Input Attributes:\nIn order to create a new item location, the following are required field\n- **Warehouse**: Identifies the warehouse the item is stored in\n- **Location**: Identified the specific location within abovementioned warehouse the item is stored in\n- **Item**: Identifies the item that is stored in the abovementioned warehouse and location\n- **Qty on hand**: The total number of units in the warehouse location at the current time\n- **Rank**: Location ranking of the item. 1 being the highest and will be the default location for this item",
        "operationId": "create-item-locations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemLocationRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "whse_num": "MAIN",
                    "loc_num": "L001",
                    "item_num": "I0001",
                    "qty_on_hand": 30,
                    "rank": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ItemLocation"
        ],
        "summary": "List Item Locations",
        "description": "This method will return the list of item locations.",
        "operationId": "list-item-locations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemLocation"
                },
                "examples": {
                  "example": {
                    "value": {
                      "loc_num": "L001",
                      "whse_num": "MAIN",
                      "item_num": "I001",
                      "qty_on_hand": 30,
                      "UOM": "EA",
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itemlocs/{itemloc_id}": {
      "get": {
        "tags": [
          "ItemLocation"
        ],
        "summary": "Read Item Locations by ID",
        "description": "This method allow to retrieve item locations by item location ID.",
        "operationId": "read-item-locations-by-id",
        "parameters": [
          {
            "name": "itemloc_id",
            "in": "path",
            "description": "The Item Location ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemLocation"
                },
                "examples": {
                  "example": {
                    "value": {
                      "loc_num": "L001",
                      "whse_num": "MAIN",
                      "item_num": "I001",
                      "qty_on_hand": 30,
                      "UOM": "EA",
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemLocation"
        ],
        "summary": "Delete Item Location",
        "description": "This method gives a site the option to delete one Item Location from the Item Locations list.\n\n## Exception:\nItem location is unable to delete if:\n-  Qty On Hand is not 0\n\nThis Item Location will be immediately removed. This action is not reversible.",
        "operationId": "delete-item-location",
        "parameters": [
          {
            "name": "itemloc_id",
            "in": "path",
            "description": "The Item Location ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Item Location",
        "operationId": "update-item-location",
        "parameters": [
          {
            "name": "itemloc_id",
            "in": "path",
            "description": "The Item Location ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": "Use this method to update the item location.\n\nThe following properties are read only:\n-id\n-whse_num\n-loc_num\n-item_num\n-site_id",
        "tags": [
          "ItemLocation"
        ]
      }
    },
    "/lotlocs": {
      "post": {
        "tags": [
          "LotLocation"
        ],
        "summary": "Create Lot Locations",
        "description": "Use this method to create a new Lot Locations in iCAPT.\n\n- To be create in lot location, item need to be as a lot track item.",
        "operationId": "create-lot-locations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLotLocationRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "whse_num": "MAIN",
                    "loc_num": "L001",
                    "item_num": "I011",
                    "lot_num": "S07092020",
                    "qty_on_hand": 40
                  }
                }
              }
            }
          },
          "description": ""
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "LotLocation"
        ],
        "summary": "List Lot Locations",
        "description": "This method will return a list of Item Lot Locations from iCAPT.",
        "operationId": "list-lot-locations",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotLocation"
                },
                "examples": {
                  "example": {
                    "value": {
                      "whse_num": "MAIN",
                      "loc_num": "L001",
                      "item_num": "I011",
                      "lot_num": "S07092020",
                      "qty_on_hand": 40,
                      "uom": "EA",
                      "qty_on_rsvd": 0,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lotlocs/{lotloc_id}": {
      "delete": {
        "tags": [
          "LotLocation"
        ],
        "summary": "Delete Lot Location",
        "description": "This method gives a site the option to delete one Lot Location from the Lot Locations list.\n\n## Exception: \nLot Location is unable to delete if:\n-  Qty On Hand is not 0\n\nThis Lot Location will be immediately removed. This action is not reversible.",
        "operationId": "delete-lot-location",
        "parameters": [
          {
            "name": "lotloc_id",
            "in": "path",
            "description": "The Lot Location ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "LotLocation"
        ],
        "summary": "Update Lot Location",
        "description": "Use this method to update item lot location.\n",
        "operationId": "update-lot-location",
        "parameters": [
          {
            "name": "lotloc_id",
            "in": "path",
            "description": "The Lot Location ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/employees": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create Employees",
        "description": "Create an Employees in iCAPT by sending the POST request.\n\n### Employees Input Attributes:\nIn order to create a employee, the following are required field\n- **Employee Number**: A unique number to identifies the employee\n- **Employee Name**: Description/Name of employee\n- **Shift**: Employee Shift",
        "operationId": "create-employees",
        "requestBody": {
          "description": "Request Field",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              },
              "example": {
                "emp_num": "string",
                "emp_name": "string",
                "shift": 0
              },
              "examples": {
                "example": {
                  "value": {
                    "emp_num": "E0001",
                    "emp_name": "John",
                    "shift": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "List Employees",
        "description": "This method will return the list of Employees created from iCAPT.",
        "operationId": "list-employees",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                },
                "examples": {
                  "example": {
                    "value": {
                      "emp_num": "E0001",
                      "emp_name": "John",
                      "emp_shift": 3,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employees/{employee_id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Read Employees by ID",
        "description": "This method allow to retrieve the employee properties by employee ID.",
        "operationId": "read-employees-by-id",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The Employee ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                },
                "examples": {
                  "example": {
                    "value": {
                      "emp_num": "E0001",
                      "emp_name": "John",
                      "emp_shift": 3,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an Employee",
        "description": "This method gives a site the option to delete one Employee from the Employees list.\n\n## Exception:\nEmployee is unable to delete if:\n   - Employee exists as a Counter\n\nThis Employee will be immediately removed. This action is not reversible.",
        "operationId": "delete-an-employee",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The Employee ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Employee",
        "operationId": "update-employee",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The Employee ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                },
                "examples": {
                  "example": {
                    "value": {
                      "emp_num": "E0001",
                      "emp_name": "John",
                      "shift": 3,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing employee.\n\nThese entities are read only :\n- id\n- emp_num\n- site_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "emp_name": "John",
                    "shift": 3
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      }
    },
    "/machines": {
      "post": {
        "tags": [
          "Machine"
        ],
        "summary": "Create Machines",
        "description": "This method gives a Site admin the option to create a Machine for a given Site.\n\n### Machine Input Attributes:\nIn order to create a machine, the following are required field\n- **Machine ID**: A unique code to identifies the machine\n- **Description**: Description of the machine\n- **Active**: Identifies the active status of the machine. 0 - Inactive, 1 - Active\n",
        "operationId": "create-machines",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMachineRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "res_id": "BR-2300",
                    "res_desc": "Drilling Machine",
                    "res_status": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "List Machines",
        "description": "Use this method to retrieve the list of Machines from iCAPT.",
        "operationId": "list-machines",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                },
                "examples": {
                  "example": {
                    "value": {
                      "res_id": "BR-2300",
                      "res_desc": "Drilling Machine",
                      "res_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/machines/{machine_id}": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Read Machines by  ID",
        "description": "Use this method to retrieve a list of Machines by machine ID.",
        "operationId": "read-machines-by-id",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "description": "The Machine ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                },
                "examples": {
                  "example": {
                    "value": {
                      "res_id": "BR-2300",
                      "res_desc": "Drilling Machine",
                      "res_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Machine"
        ],
        "summary": "Delete Machine",
        "description": "This method gives a site the option to delete one Machine from the Machines list.\n\n## Exception: \nMachine is unable to delete if:\n-  Mahcine exist in at least one material/job transaction\n\n\nMachine will be immediately removed. This action is not reversible.",
        "operationId": "delete-machine",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "description": "The Machine ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Machine",
        "operationId": "update-machine",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "description": "The Machine ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                },
                "examples": {
                  "example": {
                    "value": {
                      "res_id": "BR-2300",
                      "res_desc": "Drilling Machine",
                      "res_status": 1,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to update machine.\n\nThese entities are read only :\n- machine_ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMachineRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "res_desc": "Drilling Machine",
                    "res_status": 1
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Machine"
        ]
      }
    },
    "/customerorders": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Create Customers Orders",
        "description": "Use this method to create a Customer Orders.\n\n### Customer Order Input Attributes:\nIn order to create a customer order, the following are required field\n- **CO Number**: A CO Number uniquely identifies a customer order\n- **CO Line**: Line Item\n- **CO Release**: Release or sub-line\n- **Warehouse**: Warehouse to ship from.\n- **Item**: Item that is ordered by customer \n- **Due Date**: Target shipping date\n- **Status**: Status of the CO\n- **Customer Code**: Customer of the order\n- **Qty Ordered**: Quantity of the item ordered \n- **Qty Released**: Quantity of the item to be order on this specified CO",
        "operationId": "create-customers-orders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerOrderRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "co_num": "C0002",
                    "co_line": "2",
                    "co_rel": "0",
                    "qty_released": 30,
                    "cust_num": "MZ01",
                    "add_num": "A0001",
                    "due_date": "29/09/2020",
                    "do_num": "DO007",
                    "qty_ordered": 50,
                    "item_num": "I0001",
                    "whse_num": "MAIN",
                    "rel_status": "O"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "CustomerOrder",
          "GET"
        ],
        "summary": "List Customer Orders",
        "description": "The method allow you to retrieve the list of Customer Orders in ICAPT.",
        "operationId": "list-customer-orders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "co_num": "C0002",
                      "co_line": "2",
                      "co_rel": "0",
                      "qty_released": 30,
                      "cust_num": "MZ01",
                      "add_num": "A0001",
                      "due_date": "29/09/2020",
                      "do_num": "DO007",
                      "qty_ordered": 50,
                      "qty_shipped": 30,
                      "qty_returned": 3,
                      "item_num": "I0001",
                      "item_desc": "E1 Motor 21W 220V 50Hz",
                      "whse_num": "MAIN",
                      "uom": "EA",
                      "rel_status": "O",
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customerorders/{custorders_id}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Read Customer Orders by ID",
        "description": "This method allows to retrieve Customer Orders by the CO number.",
        "operationId": "read-customer-orders-by-id",
        "parameters": [
          {
            "name": "custorders_id",
            "in": "path",
            "description": "The Customer Order Item ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "co_num": "C0002",
                      "co_line": "2",
                      "co_rel": "0",
                      "qty_released": 30,
                      "cust_num": "MZ01",
                      "add_num": "A0001",
                      "due_date": "29/09/2020",
                      "do_num": "DO007",
                      "qty_ordered": 50,
                      "qty_shipped": 30,
                      "qty_returned": 3,
                      "item_num": "I0001",
                      "item_desc": "E1 Motor 21W 220V 50Hz",
                      "whse_num": "MAIN",
                      "uom": "EA",
                      "rel_status": "O",
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transferorders": {
      "post": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Create Transfer Orders",
        "description": "This method gives a Site admin the option to create a transfer order for a given Site.\n\n### Transfer Order Input Attributes:\nIn order to create a tranfer order, the following are required field\n- **TO number**: A TO Number uniquely identifies a transfer order\n- **From Warehouse**: Warehouse transfer order from\n- **TO Warehouse**: Warehouse transfer order to\n- **Status**: Status of the TO. Open - O, Completed - C",
        "operationId": "create-transfer-orders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "List Transfer Orders",
        "description": "This method allow to retrieve a list of transfer order.",
        "operationId": "list-transfer-orders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trn_num": "TO01",
                      "from_whse": "MAIN",
                      "to_whse": "DIST",
                      "stat": "O",
                      "from_site": null,
                      "to_site": null,
                      "trn_loc": null,
                      "driver_name": "Jane",
                      "schedule_receive_date": "2020-06-12",
                      "schedule_ship_date": "2020-06-10",
                      "pickup_date": "2020-06-10",
                      "driver_contact": null,
                      "vehicle_num": null,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transferorders/{transorder_id}": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Read Transfer Order by ID",
        "description": "This method allow to retrieve a list of transfer order by transfer order ID.",
        "operationId": "read-transfer-order-by-id",
        "parameters": [
          {
            "name": "transorder_id",
            "in": "path",
            "description": "The Transfer Order ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trn_num": "TO01",
                      "from_whse": "MAIN",
                      "to_whse": "DIST",
                      "stat": "O",
                      "from_site": null,
                      "to_site": null,
                      "trn_loc": null,
                      "driver_name": "Jane",
                      "schedule_receive_date": "2020-06-12",
                      "schedule_ship_date": "2020-06-10",
                      "pickup_date": "2020-06-10",
                      "driver_contact": null,
                      "vehicle_num": null,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Delete Transfer Order",
        "description": "This method gives a site the option to delete one Transfer Order from the Transfer Orders list. \n\n## Exception\nTransfer order is unable to delete if:\n\n- Transfer Order status is Completed\n- Qty Shipped, Qty Transferred or Qty Loss is not 0\n- Material Transaction exists for Transfer Order\n\nTransfer Order will be immediately removed. This action is not reversible.",
        "operationId": "delete-transfer-order",
        "parameters": [
          {
            "name": "transorder_id",
            "in": "path",
            "description": "The Transfer Order ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Transfer Order",
        "operationId": "update-transfer-order",
        "parameters": [
          {
            "name": "transorder_id",
            "in": "path",
            "description": "The Transfer Order ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trn_num": "TO01",
                      "from_whse": "MAIN",
                      "to_whse": "DIST",
                      "stat": "O",
                      "from_site": null,
                      "to_site": null,
                      "trn_loc": null,
                      "driver_name": "Jane",
                      "schedule_receive_date": "2020-06-12",
                      "schedule_ship_date": "2020-06-10",
                      "pickup_date": "2020-06-10",
                      "driver_contact": null,
                      "vehicle_num": null,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing transfer order.\n\nThese entities are read only :\n- transferorder_ID\n- to_warehouese\n- from_warehouse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferOrderRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "stat": "O",
                    "driver_name": "Jane",
                    "schedule_receive_date": "2020-06-12",
                    "schedule_ship_date": "2020-06-10",
                    "pickup_date": "2020-06-10",
                    "driver_contact": "0127878552",
                    "vehicle_num": "VAA3702"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      }
    },
    "/joborders": {
      "post": {
        "tags": [
          "JobOrder"
        ],
        "summary": "Create Job Orders",
        "description": "Use this method to create Job Order in iCAPT.\n\n### Job Order Input Attributes:\nIn order to create a new job order, the following are required field\n- **Job ID**: Unique ID to identifies the job order\n- **Warehouse**: Warehouse to receive in\n- **Customer Code**: Customer for this job order\n- **Item**: Item that is being produced from the order \n- **Job Date**: Job order creation date\n- **Start Date**: Date to begin production\n- **Qty Released**: The quantity required to be produce\n- **Status**: Status of the Job. Open (O), Released (R) or Completed (C) \n\n",
        "operationId": "create-job-orders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobOrderRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "job_num": "J0001",
                    "whse_num": "MAIN",
                    "UOM": "EA",
                    "job_date": "2020-01-30",
                    "start_date_plan": "2020-02-12",
                    "end_date_plan": "2020-02-15",
                    "cust_num": "C001",
                    "item_num": "I001",
                    "qty_released": 30,
                    "qty_completed": 0,
                    "qty_scrapped": 0,
                    "site_ID": "demo",
                    "job_status": "R",
                    "notes": "To be involve in drilling"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "JobOrder"
        ],
        "summary": "List Job Orders",
        "description": "This method will return the list of job orders from iCAPT.",
        "operationId": "list-job-orders",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "UOM": "EA",
                      "job_date": "2020-01-30",
                      "start_date_plan": "2020-02-12",
                      "end_date_plan": "2020-02-15",
                      "cust_num": "C001",
                      "item_num": "I001",
                      "qty_released": 30,
                      "qty_completed": 0,
                      "qty_scrapped": 0,
                      "site_ID": "demo",
                      "job_status": "R",
                      "notes": "To be involve in drilling",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/joborders/{joborder_id}": {
      "get": {
        "tags": [
          "JobOrder"
        ],
        "summary": "Read Job Order by ID",
        "description": "This method allow to retrieve job order list from iCAPT by job order ID.",
        "operationId": "read-job-order-by-id",
        "parameters": [
          {
            "name": "joborder_id",
            "in": "path",
            "description": "The Job Order ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "UOM": "EA",
                      "job_date": "2020-01-30",
                      "start_date_plan": "2020-02-12",
                      "end_date_plan": "2020-02-15",
                      "cust_num": "C001",
                      "item_num": "I001",
                      "qty_released": 30,
                      "qty_completed": 0,
                      "qty_scrapped": 0,
                      "site_ID": "demo",
                      "job_status": "R",
                      "notes": "To be involve in drilling",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JobOrder"
        ],
        "summary": "Delete Job Order",
        "description": "This method gives a site the option to delete one Job Order from the Job Orders list.\n\n## Exception: \nJob order is unable to delete if:\n- Job Status is Completed\n- Qty Completed or Qty Scrapped is not 0 \n- At least one Material Transaction exists for this Job Order\n- Job order have existed job route\n\nJob Order will be immediately removed. This action is not reversible.",
        "operationId": "delete-job-order",
        "parameters": [
          {
            "name": "joborder_id",
            "in": "path",
            "description": "The Job Order ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Job Order",
        "operationId": "update-job-order",
        "parameters": [
          {
            "name": "joborder_id",
            "in": "path",
            "description": "The Job Order ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOrder"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "UOM": "EA",
                      "job_date": "2020-01-30",
                      "start_date_plan": "2020-02-12",
                      "end_date_plan": "2020-02-15",
                      "cust_num": "C001",
                      "item_num": "I001",
                      "qty_released": 30,
                      "qty_completed": 0,
                      "qty_scrapped": 0,
                      "site_ID": "demo",
                      "job_status": "R",
                      "notes": "To be involve in drilling",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update Job Order in iCAPT.\n\nThe following properties are read only:\n\n- joborder_id\n- whse_num\n- item_num\n- description\n- uom\n- qty_complete\n- qty_scrapped\n- site_id\n\nNot allow to update if:\n- If job order status = closed\n\nNot allow to update qty released if: \n- If job order status <> open",
        "tags": [
          "JobOrder"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobOrderRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "job_date": "2020-01-30",
                    "start_date_plan": "2020-02-12",
                    "end_date_plan": "2020-02-15",
                    "cust_num": "C001",
                    "qty_released": 30,
                    "job_status": "R",
                    "notes": "To be involve in drilling"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobroutes": {
      "post": {
        "tags": [
          "JobRoute"
        ],
        "summary": "Create Job Route",
        "description": "Use this method to create a new job route in iCAPT.\n\n### Job Route Input Attributes:\nIn order to create a new job route, the following are required field\n- **Job ID**: Unique ID to identifies the job order\n- **Warehouse**: Warehouse to receive in\n- **Operation**: Sequence number of the process\n- **Work Center**: The station/work center performing this process\n- **Status**: Active flag. 0 - Inactive, 1 - Active",
        "operationId": "create-job-route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobRouteRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "job_num": "J0001",
                    "oper_num": "100",
                    "oper_status": "1",
                    "qty_moved": 0,
                    "qty_completed": 0,
                    "qty_received": 0,
                    "qty_scrapped": 0,
                    "notes": "A3 moved to zone2",
                    "wc_num": "Stamping"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "JobRoute"
        ],
        "summary": "List Job Routes",
        "description": "This method will return the list of job routes from iCAPT.",
        "operationId": "list-job-routes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRoute"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "oper_num": "100",
                      "oper_status": "1",
                      "qty_moved": 30,
                      "qty_completed": 0,
                      "qty_received": 60,
                      "qty_scrapped": 4,
                      "notes": "A3 moved to zone2",
                      "wc_num": "Stamping",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobroutes/{jobroute_id}": {
      "get": {
        "tags": [
          "JobRoute"
        ],
        "summary": "Read Job Route by ID",
        "description": "This method will return the list of job routes from iCAPT by job ID.",
        "operationId": "read-job-route-by-id",
        "parameters": [
          {
            "name": "jobroute_id",
            "in": "path",
            "description": "The Job Route ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRoute"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "oper_num": "100",
                      "oper_status": "1",
                      "qty_moved": 30,
                      "qty_completed": 0,
                      "qty_received": 60,
                      "qty_scrapped": 4,
                      "notes": "A3 moved to zone2",
                      "wc_num": "Stamping",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JobRoute"
        ],
        "summary": "Delete Job Route",
        "description": "This method gives a site the option to delete one Job Route from the Job Routes list. \n\n## Exception: \nJob route is unable to delete if:\n- Job status for this Job Route is Completed\n- Qty Moved, Qty Completed, Qty Received or Qty Scrapped is not 0\n- Material Transaction exists for this Job Route\n- Job route have existed job material\n\nJob Route will be immediately removed. This action is not reversible.",
        "operationId": "delete-job-route",
        "parameters": [
          {
            "name": "jobroute_id",
            "in": "path",
            "description": "The Job Route ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Job Route",
        "operationId": "update-job-route",
        "parameters": [
          {
            "name": "jobroute_id",
            "in": "path",
            "description": "The Job Route ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobRoute"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "oper_num": "100",
                      "oper_status": "1",
                      "qty_moved": 30,
                      "qty_completed": 0,
                      "qty_received": 60,
                      "qty_scrapped": 4,
                      "notes": "A3 moved to zone2",
                      "wc_num": "Stamping",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This method to update Job Route in iCAPT.\n\nThe following properties are read only:\n\n- joborder_id\n- oper_num\n- qty_moved\n- qty_completed\n- qty_received  \n- qty_scrapped\n\nNot allow to update if:\n- If job order status = closed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobRouteRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "oper_status": "1",
                    "notes": "A3 moved to zone2",
                    "wc_num": "Stamping"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "JobRoute"
        ]
      }
    },
    "/jobmaterials": {
      "post": {
        "tags": [
          "JobMaterial"
        ],
        "summary": "Create Job Material",
        "description": "This method allow user to create a new job material in iCAPT.\n\n### Job Material Input Attributes:\nIn order to create a new job material, the following are required field\n- **Job ID**: Unique ID to identifies the job order\n- **Warehouse**: Warehouse to receive in\n- **Operation**: Sequence number of the process\n- **Sequence**: Sequence of material. Required to be unique\n- **Material**: Item required in production\n- **Qty per**: Quantity of material needed for a finished good\n- **Scrap Factor**: The expected loss factors",
        "operationId": "create-job-material",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobMatlRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "job_num": "J0001",
                    "whse_num": "MAIN",
                    "oper_num": "100",
                    "sequence": "100",
                    "matl_item": "S500-1",
                    "qty_per": "3",
                    "scrap_factor": "0.3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "JobMaterial"
        ],
        "summary": "List Job Materials",
        "description": "This method will return the list of job materials from iCAPT.",
        "operationId": "list-job-materials",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobMaterial"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "oper_num": "100",
                      "sequence": "100",
                      "matl_item": "S500-1",
                      "UOM": "EA",
                      "matl_desc": "1-Stud Trapezium Green",
                      "qty_per": 3,
                      "scrap_factor": 0.3,
                      "qty_required": 30,
                      "qty_issued": 0,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobmaterials/{jobmaterial_id}": {
      "get": {
        "tags": [
          "JobMaterial"
        ],
        "summary": "Read Job Material by ID",
        "description": "This method will return the list of job material from iCAPT by job ID.",
        "operationId": "read-job-material-by-id",
        "parameters": [
          {
            "name": "jobmaterial_id",
            "in": "path",
            "description": "The Job Material ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobMaterial"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "oper_num": "100",
                      "sequence": "100",
                      "matl_item": "S500-1",
                      "UOM": "EA",
                      "matl_desc": "1-Stud Trapezium Green",
                      "qty_per": 3,
                      "scrap_factor": 0.3,
                      "qty_required": 30,
                      "qty_issued": 0,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JobMaterial"
        ],
        "summary": "Delete Job Material",
        "description": "This method gives a site the option to delete one Job Material from the  Job Materials list\n\n## Exception: \nJob material is unable to delete if:\n- Job Status is Completed\n- Qty Moved, Completed, Received and Scrapped is not 0 \n- At least one Material Transaction exists for this Job Material\n\nJob Material will be immediately removed. This action is not reversible.",
        "operationId": "delete-job-material",
        "parameters": [
          {
            "name": "jobmaterial_id",
            "in": "path",
            "description": "The Job Material ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Job Material",
        "operationId": "update-job-material",
        "parameters": [
          {
            "name": "jobmaterial_id",
            "in": "path",
            "description": "The Job Material ID",
            "required": true,
            "schema": {
              "type": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobMaterial"
                },
                "examples": {
                  "example": {
                    "value": {
                      "job_num": "J0001",
                      "whse_num": "MAIN",
                      "oper_num": "100",
                      "sequence": "100",
                      "matl_item": "S500-1",
                      "UOM": "EA",
                      "matl_desc": "1-Stud Trapezium Green",
                      "qty_per": 3,
                      "scrap_factor": 0.3,
                      "qty_required": 30,
                      "qty_issued": 0,
                      "site_ID": "demo",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "27-09-2019",
                      "modfied_date": "12-06-2020"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Use this method to change aspects of an existing job material.\n\nThese entities are read only :\n- id\n- job_num\n-oper_num\n-site_id\n-qty_issued\n\nNot allow to update if:\n- If job order status = closed",
        "tags": [
          "JobMaterial"
        ]
      }
    },
    "/matltrans": {
      "get": {
        "tags": [
          "MaterialTransaction"
        ],
        "summary": "Material Transaction",
        "description": "This method will return the list of material transaction history from iCAPT.",
        "operationId": "material-transaction",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialTransaction"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trans_num": 100,
                      "trans_type": "PO Receipt",
                      "trans_date": "2020-07-02 00:00:00",
                      "item_num": "I0001",
                      "vend_do": null,
                      "vend_lot": null,
                      "uom": "EA",
                      "qty": 30,
                      "whse_num": "MAIN",
                      "loc_num": "L002",
                      "lot_num": null,
                      "wc": null,
                      "ref_num": "P0001",
                      "ref_line": "1",
                      "ref_release": "0",
                      "reason_code": null,
                      "document_num": null,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobtrans": {
      "get": {
        "tags": [
          "JobTransaction"
        ],
        "summary": "Job Transaction",
        "description": "This method will return the list of job transaction history from iCAPT.",
        "operationId": "job-transaction",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTransaction"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trans_num": 22,
                      "job_type": "Job Run",
                      "start_date_time": "2020-07-01 11:12:21",
                      "end_date_time": "2020-07-01 16:52:44",
                      "emp_num": "E001",
                      "job_num": "J0001",
                      "oper_num": "100",
                      "task": null,
                      "hour": 5.67,
                      "qty_moved": 30,
                      "qty_completed": 30,
                      "qty_scrapped": 0,
                      "UOM": "EA",
                      "whse_num": "MAIN",
                      "loc_num": "L002",
                      "lot_num": null,
                      "resource_id": null,
                      "reason_code": null,
                      "document_num": null,
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "modified_by": "John",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/machinetrans": {
      "get": {
        "tags": [
          "MachineTransaction"
        ],
        "summary": "Machine Transaction",
        "description": "This method will return the list of machine transaction history from iCAPT.",
        "operationId": "machine-transaction",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTransaction"
                },
                "examples": {
                  "example": {
                    "value": {
                      "trans_num": 16,
                      "job_type": "Machine Run",
                      "res_id": "BR-2300",
                      "start_date_time": "2020-07-01 17:16:22",
                      "end_date_time": "2020-07-01 17:25:44",
                      "hour": 0.16,
                      "job_num": "J0001",
                      "oper_num": "100",
                      "item_num": "I0001",
                      "qty_completed": 30,
                      "qty_moved": 30,
                      "qty_scrapped": 0,
                      "reason_code": null,
                      "whse_num": "MAIN",
                      "loc_num": "L002",
                      "lot_num": null,
                      "start_by": "Admin",
                      "stop_by": "Admin",
                      "site_id": "DEMO",
                      "created_by": "sysadmin",
                      "created_date": "2019-09-27",
                      "modfied_date": "2020-06-12"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customerorders/{customerorder_id}": {
      "delete": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Delete a Customer Order Item",
        "description": "This method gives a site the option to delete one Customer Order Item from the Customer Order Items list. \n\n## Exception:\nCustomer order is unable to delete if:\n- Customer Order Item status is Completed\n- Qty Shipped or Qty Returned is not 0\n- Material Transaction exists for Customer Order Item\n\nCustomer Order Item will be immediately removed. This action is not reversible.",
        "operationId": "delete-a-customer-order-item",
        "parameters": [
          {
            "name": "customerorder_id",
            "in": "path",
            "description": "The Customer Order Item ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/transfrerlines/{transferline_id}": {
      "delete": {
        "tags": [
          "TransferLine"
        ],
        "summary": "Delete a Transfer Order Line",
        "description": "This method gives a site the option to delete one Transfer Order Line from the Transfer Order Lines list. \n\n## Exception\nTransfer order line is unable to delete if:\n\n- Transfer Order Line status is Completed\n- Qty Shipped , Qty Received or Qty Loss is not 0\n- Material Transaction exists for this Transfer Order Line\n\nTransfer Order Line will be immediately removed. This action is not reversible.",
        "operationId": "delete-a-transfer-order-line",
        "parameters": [
          {
            "name": "transferline_id",
            "in": "path",
            "description": "Transfer Order Line",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UOM": {
        "type": "object",
        "example": {
          "id": 0,
          "uom_num": "string",
          "uom_desc": "string",
          "rounding": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create UOM Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "uom_num": {
            "type": "string",
            "description": "The designated code given to the unit of measurement"
          },
          "uom_desc": {
            "type": "string",
            "description": "Description of UOM"
          },
          "rounding": {
            "type": "string",
            "description": "Determines the number of decimal places the unit of measurement will be displayed"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "description": "User that created the UOM"
          },
          "modified_by": {
            "description": "User that last modified the UOM"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the UOM was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the UOM was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "uom_num": "KG",
            "uom_desc": "Kilogram",
            "rounding": 2,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "Customer": {
        "type": "object",
        "example": {
          "id": 0,
          "cust_num": "string",
          "cust_name": "string",
          "cust_status": false,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Customer Output",
        "x-examples": {
          "example": {
            "cust_num": "C0099",
            "cust_name": "Three Trading Inc",
            "cust_status": 1,
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "cust_num": {
            "type": "string",
            "description": "Customer  Num"
          },
          "cust_name": {
            "type": "string",
            "description": "Customer name or description"
          },
          "cust_status": {
            "type": "boolean",
            "description": "Customer status. 0 = Inactive and 1 = Active"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "description": "The user ID that created the customer"
          },
          "modified_by": {
            "description": "The user ID that last edited the customer information"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the customer was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the customer was last edited"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        }
      },
      "MaterialTransaction": {
        "type": "object",
        "example": {
          "id": 0,
          "trans_num": 0,
          "trans_type": "string",
          "trans_date": "string",
          "item_num": "string",
          "vend_do": "string",
          "vendor_lot": "string",
          "uom": "string",
          "qty": "string",
          "whse_num": "string",
          "loc_num": "string",
          "lot_num": "string",
          "vend_lot": "string",
          "wc": "string",
          "ref_num": "string",
          "ref_line": "string",
          "ref_release": "string",
          "reason_code": "string",
          "document_num": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Material Transaction Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "trans_num": {
            "type": "integer",
            "description": "Material transaction number"
          },
          "trans_type": {
            "type": "string",
            "description": "Material transaction type"
          },
          "trans_date": {
            "type": "string",
            "description": "Material transaction date"
          },
          "item_num": {
            "type": "string",
            "description": "Item used in the transaction"
          },
          "vend_do": {
            "type": "string",
            "description": "Vendor delivery order number"
          },
          "vendor_lot": {
            "type": "string",
            "description": "Vendor item lot number"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measuremnt of item"
          },
          "qty": {
            "type": "string",
            "description": "Transacted quantity.  Positive for increase. Negative for decrease"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse where the transaction was performed"
          },
          "loc_num": {
            "type": "string",
            "description": "Location where the transaction was performed"
          },
          "lot_num": {
            "type": "string",
            "description": "Identifies the lot tracked number for the item if present"
          },
          "vend_lot": {
            "type": "string",
            "description": "Vendor item lot number"
          },
          "wc": {
            "type": "string",
            "description": "Work center related to the production operation and job route"
          },
          "ref_num": {
            "type": "string",
            "description": "Reference document number "
          },
          "ref_line": {
            "type": "string",
            "description": "Reference document line number"
          },
          "ref_release": {
            "type": "string",
            "description": "Reference document line release number"
          },
          "reason_code": {
            "type": "string",
            "description": "Reason codes"
          },
          "document_num": {
            "type": "string",
            "description": "An external document or note reference number"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "description": "User that created the material transaction"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the material transaction was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the material transaction was last modified"
          }
        },
        "x-examples": {
          "example": {
            "trans_num": 100,
            "trans_type": "PO Receipt",
            "trans_date": "2020-07-02 00:00:00",
            "item_num": "I0001",
            "vend_do": null,
            "vend_lot": null,
            "uom": "EA",
            "qty": 30,
            "whse_num": "MAIN",
            "loc_num": "L002",
            "lot_num": null,
            "wc": null,
            "ref_num": "P0001",
            "ref_line": "1",
            "ref_release": "0",
            "reason_code": null,
            "document_num": null,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "MachineTransaction": {
        "type": "object",
        "example": {
          "id": 0,
          "trans_num": 0,
          "trans_type": "string",
          "res_id": "string",
          "start_datetime": "string",
          "end_datetime": "string",
          "hour": 0.717536219069479,
          "job_num": "string",
          "oper_num": "string",
          "item_num": "string",
          "qty_completed": "string",
          "qty_moved": "string",
          "qty_scrapped": "string",
          "reason_code": "string",
          "whse_num": "string",
          "loc_num": "string",
          "lot_num": "string",
          "start_by": "string",
          "stop_by": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "trans_num": {
            "type": "integer",
            "description": "Machine transaction number"
          },
          "trans_type": {
            "type": "string",
            "description": "Machine transaction type"
          },
          "res_id": {
            "type": "string",
            "description": "Machine ID"
          },
          "start_datetime": {
            "type": "string",
            "description": "Machine run start date time"
          },
          "end_datetime": {
            "type": "string",
            "description": "Machine end date time"
          },
          "hour": {
            "type": "number",
            "description": "Total hours of machine run"
          },
          "job_num": {
            "type": "string",
            "description": "Job order number for the transaction"
          },
          "oper_num": {
            "type": "string",
            "description": "Job operation"
          },
          "item_num": {
            "type": "string",
            "description": "Item number"
          },
          "qty_completed": {
            "type": "string",
            "description": "Accumulated quantity finished "
          },
          "qty_moved": {
            "type": "string",
            "description": "Quantity moved to the next operation"
          },
          "qty_scrapped": {
            "type": "string",
            "description": "Quantity scrapped at the current operation"
          },
          "reason_code": {
            "type": "string",
            "description": "Reason codes"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number"
          },
          "loc_num": {
            "type": "string",
            "description": "Location where the transaction was performed"
          },
          "lot_num": {
            "type": "string",
            "description": "The lot tracked number for the item if present"
          },
          "start_by": {
            "type": "string",
            "description": "User started the machine run"
          },
          "stop_by": {
            "type": "string",
            "description": "User ended the machine run"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "description": "User that created the machine transaction"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the machine transaction was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the machine transaction was last modified"
          }
        },
        "x-examples": {
          "example": {
            "trans_num": 16,
            "job_type": "Machine Run",
            "res_id": "BR-2300",
            "start_date_time": "2020-07-01 17:16:22",
            "end_date_time": "2020-07-01 17:25:44",
            "hour": 0.16,
            "job_num": "J0001",
            "oper_num": "100",
            "item_num": "I0001",
            "qty_completed": 30,
            "qty_moved": 30,
            "qty_scrapped": 0,
            "reason_code": null,
            "whse_num": "MAIN",
            "loc_num": "L002",
            "lot_num": null,
            "start_by": "Admin",
            "stop_by": "Admin",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Machine Transaction Output"
      },
      "ReasonCode": {
        "type": "object",
        "example": {
          "id": 0,
          "reason_class": "string",
          "reason_num": "string",
          "reason_desc": "string",
          "site_id": "string",
          "created_date": "2020-03-30T00:00:00.0000000",
          "modified_date": "2020-03-30T00:00:00.0000000"
        },
        "description": "Create Reason Code Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "reason_class": {
            "type": "string",
            "description": "Transactions where the reason code is used"
          },
          "reason_num": {
            "type": "string",
            "description": "Reason code"
          },
          "reason_desc": {
            "type": "string",
            "description": "Description of the reason code"
          },
          "site_id": {
            "type": "string",
            "readOnly": true,
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the reason code"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the reason code"
          },
          "created_date": {
            "type": "string",
            "format": "datetime",
            "description": "The timestamp when the reason code was created"
          },
          "modified_date": {
            "type": "string",
            "format": "datetime",
            "description": "The timestamp when the reason code was last modified"
          },
          "field_1": {
            "type": "string"
          },
          "field_2": {
            "type": "string"
          },
          "field_3": {
            "type": "string"
          },
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "reason_class": "MiscIssue",
            "reason_code": "DMG",
            "reason_desc": "Damage goods",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "ListWarehousesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Warehouse"
        }
      },
      "ListLocationsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Location"
        }
      },
      "PurchaseOrderLines": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "po_num": {
            "type": "string"
          },
          "po_line": {
            "type": "string"
          },
          "po_rel": {
            "type": "string"
          },
          "vend_do": {
            "type": "string"
          },
          "qty_ordered": {
            "type": "number"
          },
          "qty_ordered_conv": {
            "type": "number"
          },
          "qty_received": {
            "type": "number"
          },
          "qty_picked": {
            "type": "number"
          },
          "qty_returned": {
            "type": "number"
          },
          "item_num": {
            "type": "string"
          },
          "item_desc": {
            "type": "string"
          },
          "vend_num": {
            "type": "string"
          },
          "vend_name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "whse_num": {
            "type": "string"
          },
          "uom": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "rel_status": {
            "type": "string"
          },
          "site_id": {
            "type": "string"
          },
          "created_by": {},
          "modified_by": {},
          "created_date": {
            "type": "string"
          },
          "modified_date": {
            "type": "string"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "example": {
          "id": 0,
          "po_num": "string",
          "po_line": "string",
          "po_rel": "string",
          "vend_do": "string",
          "qty_ordered": 0.666827221226756,
          "qty_ordered_conv": 0.650404634723636,
          "qty_received": 0.783045740915347,
          "qty_picked": 0.898952667056966,
          "qty_returned": 0.58214399000844,
          "item_num": "string",
          "item_desc": "string",
          "vend_num": "string",
          "vend_name": "string",
          "notes": "string",
          "whse_num": "string",
          "uom": "string",
          "due_date": "string",
          "rel_status": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "x-examples": {
          "example": {
            "po_num": "PO00003",
            "po_line": "2",
            "po_rel": "1",
            "qty_ordered": 30,
            "qty_ordered_conv": 0,
            "qty_received": 10,
            "qty_returned": 3,
            "item_num": "B3B8Z20OD1I1J",
            "item_desc": "2-Studs 0.5' Dark Pink",
            "vend_num": "V002",
            "vend_name": "Associate Vendors Co.",
            "notes": null,
            "whese_num": "MAIN",
            "UOM": "EA",
            "due_date": "2020-07-01",
            "rel_status": "O",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Purchase Order Lines Output"
      },
      "PurchaseOrderLine": {
        "type": "object",
        "example": {
          "id": 0,
          "po_num": "string",
          "po_line": "string",
          "po_rel": "string",
          "vend_do": "string",
          "qty_ordered": 0.666827221226756,
          "qty_ordered_conv": 0.650404634723636,
          "qty_received": 0.783045740915347,
          "qty_picked": 0.898952667056966,
          "qty_returned": 0.58214399000844,
          "item_num": "string",
          "item_desc": "string",
          "vend_num": "string",
          "vend_name": "string",
          "notes": "string",
          "whse_num": "string",
          "uom": "string",
          "due_date": "string",
          "rel_status": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Purchase Order Line Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "po_num": {
            "type": "string",
            "description": "Purchase order number"
          },
          "po_line": {
            "type": "string",
            "description": "Line item"
          },
          "po_rel": {
            "type": "string",
            "description": "Release or sub-line. Usually represents multiple delivery for the same item"
          },
          "vend_do": {
            "type": "string",
            "description": "Vendor delivery order number"
          },
          "qty_ordered": {
            "type": "number",
            "description": "The quantity item required"
          },
          "qty_ordered_conv": {
            "type": "number",
            "description": "Quantity ordered convert"
          },
          "qty_received": {
            "type": "number",
            "description": "Total quantity received for this PO line"
          },
          "qty_returned": {
            "type": "number",
            "description": "Quantity of the item that is returned to vendor"
          },
          "item_num": {
            "type": "string",
            "description": "Item that is ordered from the vendor "
          },
          "item_desc": {
            "type": "string",
            "description": "Description of item"
          },
          "vend_num": {
            "type": "string",
            "description": "Vendor number of PO"
          },
          "vend_name": {
            "type": "string",
            "description": "Vendor name or description"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse to receive in"
          },
          "uom": {
            "type": "string",
            "description": "Units of measurement of item"
          },
          "due_date": {
            "type": "string",
            "description": "Target receiving date"
          },
          "rel_status": {
            "type": "string",
            "description": "Status of PO. O = Open, C = Completed"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "description": "User that created the purchase order line"
          },
          "modified_by": {
            "description": "User that last modified the purchase order line"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the purchase order line was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the purchase order line was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "po_num": "PO00003",
            "po_line": "2",
            "po_rel": "1",
            "qty_ordered": 30,
            "qty_ordered_conv": 0,
            "qty_received": 10,
            "qty_returned": 3,
            "item_num": "B3B8Z20OD1I1J",
            "item_desc": "2-Studs 0.5' Dark Pink",
            "vend_num": "V002",
            "vend_name": "Associate Vendors Co.",
            "notes": null,
            "whese_num": "MAIN",
            "UOM": "EA",
            "due_date": "2020-07-01",
            "rel_status": "O",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "CustomerOrder": {
        "type": "object",
        "example": {
          "id": 0,
          "co_num": "string",
          "co_line": "string",
          "co_rel": "string",
          "qty_released": 0.0793732468749582,
          "qty_released_conv": 0.501683902659813,
          "cust_num": "string",
          "add_num": "string",
          "due_date": "string",
          "do_num": "string",
          "qty_ordered": 0.4024194960378,
          "qty_ordered_conv": 0.641738684444383,
          "qty_shipped": 0.0718202372929992,
          "qty_returned": 0.726180680002601,
          "item_num": "string",
          "item_desc": "string",
          "whse_num": "string",
          "uom": "string",
          "rel_status": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Customer Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "co_num": {
            "type": "string",
            "description": "Customer order number"
          },
          "co_line": {
            "type": "string",
            "description": "CO line item"
          },
          "co_rel": {
            "type": "string",
            "description": "Release or sub-line. Usually represents multiple delivery for the same item."
          },
          "qty_released": {
            "type": "number",
            "description": "Quantity of the item to be ordered by to the customer of specified CO."
          },
          "qty_released_conv": {
            "type": "number"
          },
          "cust_num": {
            "type": "string",
            "description": "Customer number. Must exist in customer list"
          },
          "add_num": {
            "type": "string",
            "description": "Delivery address"
          },
          "due_date": {
            "type": "string",
            "description": "Target shipping date. The order is past due when passed the due date."
          },
          "do_num": {
            "type": "string",
            "description": "Delivery order number"
          },
          "qty_ordered": {
            "type": "number",
            "description": "Total quantity ordered"
          },
          "qty_ordered_conv": {
            "type": "number"
          },
          "qty_shipped": {
            "type": "number",
            "description": "Total quantity shipped"
          },
          "qty_returned": {
            "type": "number",
            "description": "Total quantity returned"
          },
          "item_num": {
            "type": "string",
            "description": "Item number. Must exist in Items List"
          },
          "item_desc": {
            "type": "string",
            "description": "Descripton/name of ordered item"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number. Must exist in warehouse list"
          },
          "uom": {
            "type": "string",
            "description": "UOM number. Must exist in UOM list"
          },
          "rel_status": {
            "type": "string",
            "description": "Status of the CO. O = Open, C = Completed"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "The user ID that created the customer order"
          },
          "modified_by": {
            "type": "string",
            "description": "The user ID that last edited the customer order"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the customer order was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the customer order was last edited"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "co_num": "C0002",
            "co_line": "2",
            "co_rel": "0",
            "qty_released": 30,
            "cust_num": "MZ01",
            "add_num": "A0001",
            "due_date": "29/09/2020",
            "do_num": "DO007",
            "qty_ordered": 50,
            "qty_shipped": 30,
            "qty_returned": 3,
            "item_num": "I0001",
            "item_desc": "E1 Motor 21W 220V 50Hz",
            "whse_num": "MAIN",
            "uom": "EA",
            "rel_status": "O",
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "CreateUOMRequest": {
        "required": [
          "uom_num",
          "rounding"
        ],
        "type": "object",
        "properties": {
          "uom_num": {
            "type": "string"
          },
          "uom_desc": {
            "type": "string"
          },
          "rounding": {
            "type": "string"
          },
          "field_1": {
            "type": "string"
          },
          "field_2": {
            "type": "string"
          },
          "field_3": {
            "type": "string"
          },
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {
            "type": "string"
          },
          "field_9": {
            "type": "string"
          },
          "field_10": {
            "type": "string"
          }
        },
        "description": "Create UOM Input",
        "x-examples": {
          "example": {
            "uom_num": "KG",
            "uom_desc": "Kilogram",
            "rounding": 2
          }
        }
      },
      "CreateEmployeeRequest": {
        "type": "object",
        "description": "Create Employee Input",
        "x-examples": {
          "example": {
            "emp_num": "E0001",
            "emp_name": "John",
            "shift": 3
          }
        },
        "properties": {
          "emp_num": {
            "type": "string",
            "description": "Employee Num"
          },
          "emp_name": {
            "type": "string",
            "description": "Desctipion or employee name"
          },
          "shift": {
            "type": "integer",
            "description": "Employee shift"
          }
        },
        "required": [
          "emp_num",
          "emp_name",
          "shift"
        ]
      },
      "CreateCustomerRequest": {
        "type": "object",
        "description": "Create a customer input",
        "properties": {
          "cust_num": {
            "type": "string",
            "description": "Customer Num"
          },
          "cust_name": {
            "type": "string",
            "description": "Name of Customer"
          },
          "cust_status": {
            "type": "boolean",
            "description": "Customer Status. 0 = inactive, 1 = active"
          }
        },
        "required": [
          "cust_num",
          "cust_name",
          "cust_status"
        ],
        "x-examples": {
          "example": {
            "cust_num": "C0099",
            "cust_name": "Three Trading Inc",
            "cust_status": 1
          }
        }
      },
      "CreateLocationRequest": {
        "type": "object",
        "properties": {
          "loc_num": {
            "type": "string",
            "description": "Location Number"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse Number. Must exist in Warehouses List"
          },
          "loc_name": {
            "type": "string",
            "description": "Location Name"
          },
          "loc_type": {
            "enum": [
              "S",
              "T",
              "Q"
            ],
            "type": "string",
            "description": "Location Type - S, T, Q for Stock, Transit or Quarantine"
          }
        },
        "required": [
          "loc_num",
          "whse_num",
          "loc_type"
        ],
        "x-examples": {
          "example": {
            "loc_num": "L001",
            "whse_num": "MAIN",
            "loc_name": "Location 1",
            "loc_type": "S"
          }
        },
        "description": "Create Location Input"
      },
      "CreateCustomerOrderRequest": {
        "type": "object",
        "description": "Create a customer order input",
        "x-examples": {
          "example": {
            "co_num": "C0002",
            "co_line": "2",
            "co_rel": "0",
            "qty_released": 30,
            "cust_num": "MZ01",
            "add_num": "A0001",
            "due_date": "29/09/2020",
            "do_num": "DO007",
            "qty_ordered": 50,
            "item_num": "I0001",
            "whse_num": "MAIN",
            "rel_status": "O"
          }
        },
        "properties": {
          "co_num": {
            "type": "string",
            "description": "Customer order number"
          },
          "co_line": {
            "type": "string",
            "description": "CO line item"
          },
          "co_rel": {
            "type": "string",
            "description": "Release or sub-line. Usually represents multiple delivery for the same item."
          },
          "qty_released": {
            "type": "number",
            "description": "Quantity of the item to be ordered by to the customer of specified CO."
          },
          "qty_released_conv": {
            "type": "number"
          },
          "cust_num": {
            "type": "string",
            "description": "Customer number. Must exist in Customers List"
          },
          "add_num": {
            "type": "string",
            "description": "Delivery address"
          },
          "due_date": {
            "type": "string",
            "description": "Target shipping date. The order is past due when passed the due date."
          },
          "do_num": {
            "type": "string",
            "description": "Delivery Order number"
          },
          "qty_ordered": {
            "type": "number",
            "description": "Quantity of the item ordered "
          },
          "qty_ordered_conv": {
            "type": "number"
          },
          "qty_shipped": {
            "type": "number",
            "description": "Total quantity shipped"
          },
          "qty_returned": {
            "type": "number",
            "description": "Total Quantity returned"
          },
          "item_num": {
            "type": "string",
            "description": "Item number. Must exist in Items List"
          },
          "item_desc": {
            "type": "string",
            "description": "Item description"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number. Must exist in Warehouses List"
          },
          "uom": {
            "type": "string",
            "description": "UOM number. Must exist in UOMs List"
          },
          "rel_status": {
            "type": "string",
            "description": "Status of the CO. O = Open, C = Completed"
          }
        },
        "required": [
          "co_num",
          "co_line",
          "co_rel",
          "qty_released",
          "cust_num",
          "qty_ordered",
          "item_num",
          "whse_num",
          "rel_status"
        ]
      },
      "CreateMachineRequest": {
        "type": "object",
        "properties": {
          "res_id": {
            "type": "string",
            "description": "Machine Unique ID"
          },
          "res_desc": {
            "type": "string",
            "description": "Machine Name or Description"
          },
          "res_status": {
            "type": "boolean",
            "description": "Machine Status. 1 = Active or 0 = Inactive"
          }
        },
        "required": [
          "res_id",
          "res_desc",
          "res_status"
        ],
        "x-examples": {
          "example": {
            "res_id": "BR-2300",
            "res_desc": "Drilling Machine",
            "res_status": 1
          }
        },
        "description": "Create Machine Input"
      },
      "CreateLotLocationRequest": {
        "type": "object",
        "description": "Create Lot Location Input",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number. Must exist in Warehouses List"
          },
          "loc_num": {
            "type": "string",
            "description": "Location Number"
          },
          "item_num": {
            "type": "string",
            "description": "Item number. Must exist in Items List & a Lot Track Item"
          },
          "lot_num": {
            "type": "string",
            "description": "Lot number."
          },
          "qty_on_hand": {
            "type": "number",
            "description": "quantity of item"
          },
          "uom": {
            "type": "string",
            "description": "UOM number. Must exist in UOMs List"
          },
          "qty_on_rsvd": {
            "type": "number"
          }
        },
        "required": [
          "whse_num",
          "loc_num",
          "item_num",
          "lot_num",
          "qty_on_hand"
        ],
        "x-examples": {
          "example": {
            "whse_num": "MAIN",
            "loc_num": "L001",
            "item_num": "I011",
            "lot_num": "S07092020",
            "qty_on_hand": 40
          }
        }
      },
      "Location": {
        "type": "object",
        "description": "Location Data",
        "example": {
          "id": 0,
          "loc_num": "string",
          "whse_num": "string",
          "loc_name": "string",
          "loc_type": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Location ID",
            "readOnly": true
          },
          "loc_num": {
            "type": "string",
            "description": "The designated code given to the location"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse Number. Refer to Warehouses List"
          },
          "loc_name": {
            "type": "string",
            "description": "Location Name"
          },
          "loc_type": {
            "type": "string",
            "description": "Location Type. Stock = S, T = Transit, Q = Quarantine"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the location"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last updated the location information"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the location was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the location was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "loc_num": "L001",
            "whse_num": "MAIN",
            "loc_name": "Location 1",
            "loc_type": "S",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "CreateItemLocationRequest": {
        "required": [
          "whse_num",
          "loc_num",
          "item_num",
          "qty_on_hand",
          "uom",
          "qty_on_rsvd"
        ],
        "type": "object",
        "properties": {
          "whse_num": {
            "type": "string",
            "description": "Warehouse Number. Must exist in Warehouses List."
          },
          "loc_num": {
            "type": "string",
            "description": "Location Number. Must exist in Locations List"
          },
          "item_num": {
            "type": "string",
            "description": "Item Number. Must exist in Items List"
          },
          "qty_on_hand": {
            "type": "number",
            "description": "Quantity on Hand"
          },
          "uom": {
            "type": "string",
            "description": "UOM Number. Must exist in UOMs Listt"
          },
          "qty_on_rsvd": {
            "type": "number",
            "description": "Quantity on Reserve"
          }
        },
        "description": "Create Item Location Input",
        "x-examples": {
          "example": {
            "whse_num": "MAIN",
            "loc_num": "L001",
            "item_num": "I0001",
            "qty_on_hand": 30,
            "rank": 3
          }
        }
      },
      "CreateItemRequest": {
        "type": "object",
        "description": "Create Item Input",
        "x-examples": {
          "example": {
            "item_num": "I0003",
            "item_desc": "6 inch block",
            "uom": "EA",
            "product_code": "FG-MA",
            "lot_tracked": 1,
            "unit_weight": 3,
            "item_status": 1
          }
        },
        "properties": {
          "item_num": {
            "type": "string",
            "description": "Item Number. Must be unique"
          },
          "item_desc": {
            "type": "string",
            "description": "Item description"
          },
          "uom": {
            "type": "string",
            "description": "UOM number. Must exist in UOMs List"
          },
          "product_code": {
            "type": "string",
            "description": "Product Code. Must exist in Product Codes List"
          },
          "lot_tracked": {
            "type": "boolean",
            "description": "Is Item Lot Tracked? 1 = True, 0 = False"
          },
          "unit_weight": {
            "type": "number",
            "description": "The unit weight of item in Kilogram(KG)"
          },
          "item_status": {
            "type": "boolean",
            "description": "Is Item Active? 1 = Active, 0 = Not Active"
          }
        },
        "required": [
          "item_num",
          "item_desc",
          "uom",
          "product_code",
          "lot_tracked",
          "unit_weight",
          "item_status"
        ]
      },
      "CreateJobMatlRequest": {
        "type": "object",
        "description": "Create Job Material Input",
        "properties": {
          "job_num": {
            "type": "string",
            "description": "Job orders of this job material belongs to. Must exist in job order list"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse Num. Must exist in Warehouses List"
          },
          "oper_num": {
            "type": "string",
            "description": "Sequence number of the process. Must exist in job route under the defined job order number"
          },
          "sequence": {
            "type": "string",
            "description": "Sequence of material. Required to be unique"
          },
          "matl_item": {
            "type": "string",
            "description": "Material Item Num. Must exist in Items List"
          },
          "uom": {
            "type": "string",
            "description": "UOM Num. Must exist in UOMs List"
          },
          "matl_desc": {
            "type": "string",
            "description": "Material Description"
          },
          "qty_per": {
            "type": "string",
            "description": "Quantity of material needed for a finished good"
          },
          "scrap_factor": {
            "type": "string",
            "description": "The expected loss factors"
          },
          "qty_required": {
            "type": "number",
            "description": "Total quantity required "
          },
          "qty_issued": {
            "type": "number",
            "description": "Accumulated quantity finished "
          }
        },
        "required": [
          "job_num",
          "whse_num",
          "oper_num",
          "sequence",
          "matl_item",
          "qty_per",
          "scrap_factor"
        ],
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "whse_num": "MAIN",
            "oper_num": "100",
            "sequence": "100",
            "matl_item": "S500-1",
            "qty_per": "3",
            "scrap_factor": "0.3"
          }
        }
      },
      "ProductCode": {
        "type": "object",
        "example": {
          "id": 0,
          "product_code": "string",
          "product_desc": "string",
          "product_status": false,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Product Code Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "product_code": {
            "type": "string",
            "description": "Product Code"
          },
          "product_desc": {
            "type": "string",
            "description": "Product description"
          },
          "product_status": {
            "type": "boolean",
            "description": "Product code status. 1 = Active, 0 = Inactive"
          },
          "site_id": {
            "type": "string",
            "readOnly": true,
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the product code"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the product code"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the product code was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the product code was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "product_code": "FG-MA",
            "product_desc": "Megatech-P100",
            "product_status": "1",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "Task": {
        "type": "object",
        "example": {
          "id": 0,
          "task_name": "string",
          "task_desc": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Task Code Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "task_name": {
            "type": "string",
            "description": "Indirect task code"
          },
          "task_desc": {
            "type": "string",
            "description": "Indirect task description"
          },
          "site_id": {
            "type": "string",
            "readOnly": true,
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the indirect task"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the indirect task"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the indirect task was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the indirect task was last modified"
          }
        },
        "x-examples": {
          "example": {
            "task_name": "KAIZEN",
            "task_desc": "Kaizen Activity",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "Employee": {
        "type": "object",
        "example": {
          "id": 0,
          "emp_num": "string",
          "emp_name": "string",
          "shift": 0,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "x-examples": {
          "example": {
            "emp_num": "E0001",
            "emp_name": "John",
            "shift": 3,
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Employee ID",
            "readOnly": true
          },
          "emp_num": {
            "type": "string",
            "description": "Employee Number"
          },
          "emp_name": {
            "type": "string",
            "description": "Employee Name"
          },
          "shift": {
            "type": "integer",
            "description": "Shift"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID",
            "readOnly": true
          },
          "created_by": {
            "description": "The user ID that created the employee"
          },
          "modified_by": {
            "description": "The user ID that last edited the employee"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the employee was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the employee was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "description": "Create Employee Output"
      },
      "Item": {
        "type": "object",
        "x-examples": {
          "example": {
            "item_num": "I0003",
            "item_desc": "6 inch block",
            "uom": "EA",
            "product_code": "FG-MA",
            "lot_tracked": 1,
            "unit_weight": 3,
            "item_status": 1,
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Item ID",
            "readOnly": true
          },
          "item_num": {
            "type": "string",
            "description": "Item Number"
          },
          "item_desc": {
            "type": "string",
            "description": "Item Description"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measurement of the item"
          },
          "product_code": {
            "type": "string",
            "description": "Product Code. Item Material classification."
          },
          "lot_tracked": {
            "type": "boolean",
            "description": "Item is lot tracked indicator. 0 = Inactive , 1 = Active"
          },
          "unit_weight": {
            "type": "number",
            "description": "The unit weight of item in Kilogram(KG)"
          },
          "item_status": {
            "type": "boolean",
            "description": "Is Item Active? 1 = Active, 0 = Not Active"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "The user ID that created the item"
          },
          "modified_by": {
            "type": "string",
            "description": "The user ID that last edited the item information"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the item was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the item was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "description": "Create Item Output"
      },
      "ItemLocation": {
        "type": "object",
        "example": {
          "id": 0,
          "whse_num": "string",
          "loc_num": "string",
          "item_num": "string",
          "qty_on_hand": 0.123124045721771,
          "uom": "string",
          "qty_on_rsvd": 0.910289065018264,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "whse_num": {
            "type": "string",
            "description": "Identifies the warehouse the item is stored in. "
          },
          "loc_num": {
            "type": "string",
            "description": "Identified the specific location within above mentioned warehouse the item is stored in. "
          },
          "item_num": {
            "type": "string",
            "description": "Identifies the item that is stored in the above mentioned warehouse and location. "
          },
          "qty_on_hand": {
            "type": "number",
            "description": "Total item quantity on hand"
          },
          "uom": {
            "type": "string",
            "description": "Units of measurement of the item"
          },
          "qty_on_rsvd": {
            "type": "number",
            "description": "Qty on reserve"
          },
          "site_id": {
            "type": "string",
            "readOnly": true,
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the item location"
          },
          "modified_by": {
            "type": "string",
            "description": "The user that last updated the item location"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the item location was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the item location was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "loc_num": "L001",
            "whse_num": "MAIN",
            "item_num": "I001",
            "qty_on_hand": 30,
            "UOM": "EA",
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Item Location Output"
      },
      "JobMaterial": {
        "type": "object",
        "example": {
          "id": 0,
          "job_num": "string",
          "whse_num": "string",
          "oper_num": "string",
          "sequence": "string",
          "matl_item": "string",
          "uom": "string",
          "matl_desc": "string",
          "qty_per": "string",
          "scrap_factor": "string",
          "qty_required": 0.817075366431654,
          "qty_issued": 0.384134391824688,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "whse_num": "MAIN",
            "oper_num": "100",
            "sequence": "100",
            "matl_item": "S500-1",
            "UOM": "EA",
            "matl_desc": "3-STUD Green",
            "qty_per": "3",
            "scrap_factor": "0.3",
            "job_date": "2020-01-30",
            "site_ID": "demo",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Job Material Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "job_num": {
            "type": "string",
            "description": "A code uniquely identifies a job order"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse to receive in"
          },
          "oper_num": {
            "type": "string",
            "description": "Sequence number of the process"
          },
          "sequence": {
            "type": "string",
            "description": "Job Sequence Number"
          },
          "matl_item": {
            "type": "string",
            "description": "Item required in production"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measure of the material item"
          },
          "matl_desc": {
            "type": "string",
            "description": "Material description"
          },
          "qty_per": {
            "type": "number",
            "description": "Quantity of material needed for a finished good"
          },
          "scrap_factor": {
            "type": "number",
            "description": "The expected loss factors."
          },
          "qty_required": {
            "type": "number",
            "description": "Total quantity required "
          },
          "qty_issued": {
            "type": "number",
            "description": "Total quantity issued"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the job material"
          },
          "modified_by": {
            "type": "string",
            "description": "Last user that updated the job material"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the job material was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the job material was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        }
      },
      "Machine": {
        "type": "object",
        "example": {
          "id": 0,
          "res_id": "string",
          "res_desc": "string",
          "res_status": false,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "res_id": {
            "type": "string",
            "description": "Machine ID"
          },
          "res_desc": {
            "type": "string",
            "description": "Machine description"
          },
          "res_status": {
            "type": "boolean",
            "description": "Machine status. 0 = Inactive, 1 = Active"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the machine"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the machine information"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the machine was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the machine was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "res_id": "BR-2300",
            "res_desc": "Drilling Machine",
            "res_status": 1,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Machine Output"
      },
      "Warehouse": {
        "type": "object",
        "description": "Create Warehouse Output",
        "x-examples": {
          "example": {
            "whse_num": "MAIN",
            "whse_name": "Main Warehouse",
            "whse_address": "ABC Street",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number"
          },
          "whse_name": {
            "type": "string",
            "description": "Warehouse name"
          },
          "whse_address": {
            "type": "string",
            "description": "Warehouse address"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID",
            "readOnly": true
          },
          "created_by": {
            "type": "string",
            "description": "User that created the warehouse"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last updated the warehouse"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the warehouse was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the warehouse was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        }
      },
      "WorkCenter": {
        "type": "object",
        "example": {
          "id": 0,
          "wc_num": "string",
          "wc_desc": "string",
          "wc_status": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Work Center Output",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Work Center ID",
            "readOnly": true
          },
          "wc_num": {
            "type": "string",
            "description": "Work Center number"
          },
          "wc_desc": {
            "type": "string",
            "description": "Work Center description"
          },
          "wc_status": {
            "type": "string",
            "description": "Work Center status. 1 = Active, 0 = Inactive"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the work center"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last updated the work center"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the workcenter was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the workcenter was last updated"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example-1": {
            "wc_num": "ASSY-01",
            "wc_desc": "Assembly Station 1",
            "wc_status": 1,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "Vendor": {
        "type": "object",
        "example": {
          "id": 0,
          "vend_num": "string",
          "vend_name": "string",
          "vend_status": false,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Vendor Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "vend_num": {
            "type": "string",
            "description": "Vendor Number"
          },
          "vend_name": {
            "type": "string",
            "description": "Vendor Name"
          },
          "vend_status": {
            "type": "boolean",
            "description": "Vendor Status. 1 = Active, 0 = Inactive"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID",
            "readOnly": true
          },
          "created_by": {
            "type": "string",
            "description": "User that created the vendor"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the Vendor"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the vendor was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the vendor was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "vend_num": "V0001",
            "vend_name": "MPH",
            "vend_status": 1,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "TransferOrder": {
        "type": "object",
        "example": {
          "id": 0,
          "trn_num": "string",
          "from_whse": "string",
          "to_whse": "string",
          "stat": "string",
          "from_site": "string",
          "to_site": "string",
          "trn_loc": "string",
          "driver_name": "string",
          "schedule_receive_date": "string",
          "schedule_ship_date": "string",
          "pickup_date": "string",
          "driver_contact": "string",
          "vehicle_num": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "description": "Create Transfer Order Output",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Transder Order ID",
            "readOnly": true
          },
          "trn_num": {
            "type": "string",
            "description": "Transfer Order number"
          },
          "from_whse": {
            "type": "string",
            "description": "Warehouse Number (From). Must exist in Warehouses List"
          },
          "to_whse": {
            "type": "string",
            "description": "Warehouse Number (To). Must exist in Warehouses List"
          },
          "stat": {
            "type": "string",
            "description": "Status. O = Open, C = Completed"
          },
          "from_site": {
            "type": "string"
          },
          "to_site": {
            "type": "string"
          },
          "trn_loc": {
            "type": "string",
            "description": "Transfer Location. Must exist in Locations List"
          },
          "driver_name": {
            "type": "string",
            "description": "Driver's Name"
          },
          "schedule_receive_date": {
            "type": "string",
            "description": "Scheduled received date"
          },
          "schedule_ship_date": {
            "type": "string",
            "description": "Scheduled shipping date"
          },
          "pickup_date": {
            "type": "string",
            "description": "Pickup date"
          },
          "driver_contact": {
            "type": "string",
            "description": "Driver Contact"
          },
          "vehicle_num": {
            "type": "string",
            "description": "Vehicle number"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID",
            "readOnly": true
          },
          "created_by": {
            "type": "string",
            "description": "User that created the transfer order"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the transfer order"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the transfer order was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the transfer order was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "x-examples": {
          "example": {
            "trn_num": "TO01",
            "from_whse": "MAIN",
            "to_whse": "DIST",
            "stat": "O",
            "from_site": null,
            "to_site": null,
            "trn_loc": null,
            "driver_name": "Jane",
            "schedule_receive_date": "2020-06-12",
            "schedule_ship_date": "2020-06-10",
            "pickup_date": "2020-06-10",
            "driver_contact": null,
            "vehicle_num": null,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "JobOrder": {
        "type": "object",
        "example": {
          "id": 0,
          "job_num": "string",
          "whse_num": "string",
          "uom": "string",
          "job_date": "string",
          "start_date_plan": "string",
          "end_date_plan": "string",
          "cust_num": "string",
          "item_num": "string",
          "qty_released": 0.386367611689434,
          "qty_completed": 0.554575466208115,
          "qty_scrapped": 0.655315075452746,
          "job_status": "string",
          "notes": "string",
          "site_id": "string",
          "created_by": "string",
          "modified_by": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "Job ID",
            "readOnly": true
          },
          "job_num": {
            "type": "string",
            "description": "Job number"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measure of the job item"
          },
          "job_date": {
            "type": "string",
            "description": "Job Order creation date"
          },
          "start_date_plan": {
            "type": "string",
            "description": "Date to begin production"
          },
          "end_date_plan": {
            "type": "string",
            "description": "Target Date of production end"
          },
          "cust_num": {
            "type": "string",
            "description": "Customer number"
          },
          "item_num": {
            "type": "string",
            "description": "Item that is being produced from the order "
          },
          "qty_released": {
            "type": "number",
            "description": "The quantity required to be produced"
          },
          "qty_completed": {
            "type": "number",
            "description": "Accumulated quantity finished "
          },
          "qty_scrapped": {
            "type": "number",
            "description": "Accumulated quantity rejected"
          },
          "job_status": {
            "type": "string",
            "description": "Job status. O = Open, R = Released, C = Completed"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the job order"
          },
          "modified_by": {
            "type": "string",
            "description": "Last user that modified the job order"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the job order was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the job order was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "description": "Create Job Order Output",
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "whse_num": "MAIN",
            "UOM": "EA",
            "job_date": "2020-01-30",
            "start_date_plan": "2020-02-12",
            "end_date_plan": "2020-02-15",
            "cust_num": "C001",
            "item_num": "I001",
            "qty_released": 30,
            "qty_completed": 0,
            "qty_scrapped": 0,
            "site_ID": "demo",
            "job_status": "R",
            "notes": "To be involve in drilling",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "JobRoute": {
        "type": "object",
        "example": {
          "id": 0,
          "job_num": "string",
          "oper_num": "string",
          "oper_status": "string",
          "qty_moved": 0.509143701830941,
          "qty_completed": 0.466866431322718,
          "qty_received": 0.213148446410147,
          "qty_scrapped": 0.421101113244757,
          "notes": "string",
          "wc_num": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "oper_num": "100",
            "oper_status": "1",
            "qty_moved": 30,
            "qty_completed": 0,
            "qty_received": 60,
            "qty_scrapped": 4,
            "notes": "A3 moved to zone2",
            "wc_num": "Stamping",
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Job Route Output",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "job_num": {
            "type": "string",
            "description": "Job number"
          },
          "oper_num": {
            "type": "string",
            "description": "Sequence number of the process"
          },
          "oper_status": {
            "type": "string",
            "description": "Job Route status. 0 = Inactive, 1 = Active"
          },
          "qty_moved": {
            "type": "number",
            "description": "The quantity moved to next operation"
          },
          "qty_completed": {
            "type": "number",
            "description": "Accumulated quantity finished "
          },
          "qty_received": {
            "type": "number",
            "description": "The quantity received/moved from previous operation"
          },
          "qty_scrapped": {
            "type": "number",
            "description": "Accumulated quantity rejected"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          },
          "wc_num": {
            "type": "string",
            "description": "Work center related to the production operation and job route"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the job order"
          },
          "modified_by": {
            "type": "string",
            "description": "Last user that modified the job route"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the job route was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the job route was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        }
      },
      "JobTransaction": {
        "type": "object",
        "example": {
          "id": 0,
          "trans_num": 0,
          "job_type": "string",
          "start_datetime": "string",
          "end_datetime": "string",
          "emp_num": "string",
          "job_num": "string",
          "oper_num": "string",
          "task": "string",
          "hour": 0.927221834568217,
          "qty_completed": 0.127471678190928,
          "qty_moved": 0.281043236168493,
          "qty_scrapped": 0.875879589195607,
          "uom": "string",
          "whse_num": "string",
          "loc_num": "string",
          "lot_num": "string",
          "resource_id": "string",
          "reason_code": "string",
          "document_num": "string",
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "trans_num": {
            "type": "integer",
            "description": "Job Transaction Number"
          },
          "job_type": {
            "type": "string",
            "description": "Job type"
          },
          "start_datetime": {
            "type": "string",
            "description": "Job starting time"
          },
          "end_datetime": {
            "type": "string",
            "description": "Job ended time"
          },
          "emp_num": {
            "type": "string",
            "description": "Employee number"
          },
          "job_num": {
            "type": "string",
            "description": "Job number"
          },
          "oper_num": {
            "type": "string",
            "description": "Job Route number"
          },
          "task": {
            "type": "string",
            "description": "Indirect task"
          },
          "hour": {
            "type": "number",
            "description": "Hours take to finish the job"
          },
          "qty_completed": {
            "type": "number",
            "description": "Accumulated quantity finished "
          },
          "qty_moved": {
            "type": "number",
            "description": "Qty moved to next operation"
          },
          "qty_scrapped": {
            "type": "number",
            "description": "Accumulated quantity rejected"
          },
          "uom": {
            "type": "string",
            "description": "Item units of measurement"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number of item received in"
          },
          "loc_num": {
            "type": "string",
            "description": "The specific location within above mentioned warehouse the item is stored in."
          },
          "lot_num": {
            "type": "string",
            "description": "Lot number of item"
          },
          "resource_id": {
            "type": "string"
          },
          "reason_code": {
            "type": "string",
            "description": "Reason code for rejected quantity"
          },
          "document_num": {
            "type": "string"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the job transaction"
          },
          "created_date": {
            "type": "string",
            "format": "datetime",
            "description": "The timestamp when the job transaction was created"
          },
          "modified_by": {
            "type": "string",
            "description": "The user that last updated the job transaction information"
          },
          "modified_date": {
            "type": "string",
            "format": "datetime",
            "description": "The timestamp when the job transaction was last modified"
          }
        },
        "x-examples": {
          "example": {
            "trans_num": 22,
            "job_type": "Job Run",
            "start_date_time": "2020-07-01 11:12:21",
            "end_date_time": "2020-07-01 16:52:44",
            "emp_num": "E001",
            "job_num": "J0001",
            "oper_num": "100",
            "task": null,
            "hour": 5.67,
            "qty_moved": 30,
            "qty_completed": 30,
            "qty_scrapped": 0,
            "UOM": "EA",
            "whse_num": "MAIN",
            "loc_num": "L002",
            "lot_num": null,
            "resource_id": null,
            "reason_code": null,
            "document_num": null,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        },
        "description": "Create Job Transaction History Output"
      },
      "LotLocation": {
        "type": "object",
        "example": {
          "id": 0,
          "whse_mum": "string",
          "loc_num": "string",
          "item_num": "string",
          "lot_num": "string",
          "qty_on_hand": 0.59435164562046,
          "uom": "string",
          "qty_on_rsvd": 0.751666105267533,
          "site_id": "string",
          "created_date": "string",
          "modified_date": "string"
        },
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "whse_num": {
            "type": "string",
            "description": "Identifies the warehouse the item is stored in"
          },
          "loc_num": {
            "type": "string",
            "description": "Identified the specific location within abovementioned warehouse the item is stored in"
          },
          "item_num": {
            "type": "string",
            "description": "Identifies the item that is stored in the abovementioned warehouse and location"
          },
          "lot_num": {
            "type": "string",
            "description": "Creates and assigns above selected item to a designated Lot within the Warehouse"
          },
          "qty_on_hand": {
            "type": "number",
            "description": "The total number of units that are in the warehouse location at the current time"
          },
          "uom": {
            "type": "string",
            "description": "Units of measurement of the item"
          },
          "qty_on_rsvd": {
            "type": "number",
            "description": "Quantity on reserve"
          },
          "site_id": {
            "type": "string",
            "description": "Site ID"
          },
          "created_by": {
            "type": "string",
            "description": "User that created the item lot location"
          },
          "modified_by": {
            "type": "string",
            "description": "User that last modified the item lot location"
          },
          "created_date": {
            "type": "string",
            "description": "The timestamp when the lot location was created"
          },
          "modified_date": {
            "type": "string",
            "description": "The timestamp when the lot location was last modified"
          },
          "field_1": {},
          "field_2": {},
          "field_3": {},
          "field_4": {},
          "field_5": {},
          "field_6": {},
          "field_7": {},
          "field_8": {},
          "field_9": {},
          "field_10": {}
        },
        "description": "Create Lot Location Output",
        "x-examples": {
          "example": {
            "whse_num": "MAIN",
            "loc_num": "L001",
            "item_num": "I011",
            "lot_num": "S07092020",
            "qty_on_hand": 40,
            "uom": "EA",
            "qty_on_rsvd": 0,
            "site_id": "DEMO",
            "created_by": "sysadmin",
            "modified_by": "John",
            "created_date": "2019-09-27",
            "modfied_date": "2020-06-12"
          }
        }
      },
      "UpdateLocationRequest": {
        "type": "object",
        "properties": {
          "loc_name": {
            "type": "string",
            "description": "Location Name"
          },
          "loc_type": {
            "type": "string",
            "description": "Location Type"
          }
        },
        "description": "Update Location",
        "x-examples": {
          "example": {
            "loc_name": "L0001",
            "loc_type": "S"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "CreateWarehouseRequest": {
        "title": "CreateWarehouseRequest",
        "type": "object",
        "x-examples": {
          "example": {
            "whse_num": "WH2",
            "whse_name": "Warehouse2",
            "address": "12, Kilenny Road"
          }
        },
        "description": "Create Warehouse Input",
        "properties": {
          "whse_num": {
            "type": "string",
            "description": "Warehouse number. This must be unique."
          },
          "whse_name": {
            "type": "string",
            "description": "Warehouse name"
          },
          "address": {
            "type": "string",
            "description": "Warehouse address"
          }
        },
        "required": [
          "whse_num",
          "whse_name",
          "address"
        ]
      },
      "CreateJobOrderRequest": {
        "title": "CreateJobOrderRequest",
        "type": "object",
        "description": "Create Job Order Input",
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "whse_num": "MAIN",
            "UOM": "EA",
            "job_date": "2020-01-30",
            "start_date_plan": "2020-02-12",
            "end_date_plan": "2020-02-15",
            "cust_num": "C001",
            "item_num": "I001",
            "qty_released": 30,
            "qty_completed": 0,
            "qty_scrapped": 0,
            "site_ID": "demo",
            "job_status": "R",
            "notes": "To be involve in drilling"
          }
        },
        "properties": {
          "job_num": {
            "type": "string",
            "description": "Job number"
          },
          "whse_num": {
            "type": "string",
            "description": "Warehouse number"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measure of job item"
          },
          "job_date": {
            "type": "string",
            "description": "Job order creation date"
          },
          "start_date_plan": {
            "type": "string",
            "description": "Date to begin production"
          },
          "end_date_plan": {
            "type": "string",
            "description": "Date to end production"
          },
          "cust_num": {
            "type": "string",
            "description": "Customer number"
          },
          "item_num": {
            "type": "string",
            "description": "Item that is being produced from the order "
          },
          "qty_released": {
            "type": "number",
            "description": "The quantity required to be produced"
          },
          "qty_completed": {
            "type": "number",
            "default": 0,
            "description": "Accumulated quantity finished"
          },
          "qty_scrapped": {
            "type": "number",
            "default": 0,
            "description": "Accumulated quantity rejected"
          },
          "job_status": {
            "type": "string",
            "description": "Job status. O = Open, R = Released, C = Completed"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          }
        },
        "required": [
          "job_num",
          "whse_num",
          "uom",
          "job_date",
          "start_date_plan",
          "cust_num",
          "item_num",
          "qty_released",
          "qty_completed",
          "qty_scrapped",
          "job_status"
        ]
      },
      "CreateJobRouteRequest": {
        "title": "CreateJobRouteRequest",
        "type": "object",
        "description": "Create Job Route Input",
        "x-examples": {
          "example": {
            "job_num": "J0001",
            "oper_num": "100",
            "oper_status": "1",
            "qty_moved": 0,
            "qty_completed": 0,
            "qty_received": 0,
            "qty_scrapped": 0,
            "notes": "A3 moved to zone2",
            "wc_num": "Stamping"
          }
        },
        "properties": {
          "job_num": {
            "type": "string",
            "description": "Job number"
          },
          "oper_num": {
            "type": "string",
            "description": "Sequence number of the process"
          },
          "oper_status": {
            "type": "string",
            "default": "1",
            "description": "Job route status. 0 = Inactive, 1 = Active"
          },
          "qty_moved": {
            "type": "number",
            "default": 0,
            "description": "The quantity moved to next operation"
          },
          "qty_completed": {
            "type": "number",
            "default": 0,
            "description": "Accumulated quantity finished "
          },
          "qty_received": {
            "type": "number",
            "default": 0,
            "description": "The quantity received/moved from previous operation"
          },
          "qty_scrapped": {
            "type": "number",
            "default": 0,
            "description": "Accumulated quantity rejected"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          },
          "wc_num": {
            "type": "string",
            "description": "Work center related to the production operation and job route"
          }
        },
        "required": [
          "job_num",
          "oper_num",
          "oper_status",
          "qty_moved",
          "qty_completed",
          "qty_received",
          "qty_scrapped",
          "wc_num"
        ]
      },
      "CreateProductCodeRequest": {
        "title": "CreateProductCodeRequest",
        "type": "object",
        "description": "Create Product Code Input",
        "x-examples": {
          "example": {
            "product_code": "FG-MA",
            "product_desc": "Megatech-P100",
            "product_status": "1"
          }
        },
        "properties": {
          "product_code": {
            "type": "string",
            "description": "Product Code"
          },
          "product_desc": {
            "type": "string",
            "description": "Product Description"
          },
          "product_status": {
            "type": "boolean",
            "description": "Product code status. 1 = Active, 0 = Inactive"
          }
        },
        "required": [
          "product_code",
          "product_status"
        ]
      },
      "CreateReasonCodeRequest": {
        "title": "CreateReasonCodeRequest",
        "type": "object",
        "description": "Create Reason Code Input",
        "x-examples": {
          "example": {
            "reason_class": "MiscIssue",
            "reason_code": "DMG",
            "reason_desc": "Damage goods"
          }
        },
        "properties": {
          "reason_class": {
            "type": "string",
            "description": "Transactions where the reason code is used"
          },
          "reason_num": {
            "type": "string",
            "description": "Reason code"
          },
          "reason_desc": {
            "type": "string",
            "description": "Description of reason code"
          }
        }
      },
      "CreateTaskRequest": {
        "title": "CreateTaskRequest",
        "type": "object",
        "description": "Create Task Input",
        "x-examples": {
          "example": {
            "task_name": "KAIZEN",
            "task_desc": "Kaizen Activity"
          }
        },
        "properties": {
          "task_name": {
            "type": "string",
            "description": "Indirect task code"
          },
          "task_desc": {
            "type": "string",
            "description": "Indirect task description"
          }
        },
        "required": [
          "task_name"
        ]
      },
      "CreateVendorRequest": {
        "title": "CreateVendorRequest",
        "type": "object",
        "description": "Create Vendor Input",
        "properties": {
          "vend_num": {
            "type": "string",
            "description": "Vendor number"
          },
          "vend_name": {
            "type": "string",
            "description": "Vendor name"
          },
          "vend_status": {
            "type": "boolean",
            "description": "Vendor Status. 1 = Active, 0 = Inactive"
          }
        },
        "required": [
          "vend_num",
          "vend_name",
          "vend_status"
        ],
        "x-examples": {
          "example": {
            "vend_num": "V0001",
            "vend_name": "MPH",
            "vend_status": 1
          }
        }
      },
      "CreateWorkCenterRequest": {
        "title": "CreateWorkCenterRequest",
        "type": "object",
        "description": "Create Work Center Input",
        "x-examples": {
          "example": {
            "wc_num": "ASSY-01",
            "wc_desc": "Assembly Station 1",
            "wc_status": 1
          }
        },
        "properties": {
          "wc_num": {
            "type": "string",
            "description": "Work center name"
          },
          "wc_desc": {
            "type": "string",
            "description": "Work center description"
          },
          "wc_status": {
            "type": "string",
            "description": "Work Center status. 1 = Active, 0 = Inactive",
            "default": "1"
          }
        },
        "required": [
          "wc_num",
          "wc_status"
        ]
      },
      "UpdateWarehouseRequest": {
        "title": "UpdateWarehouseRequest",
        "type": "object",
        "description": "Update Warehouse",
        "properties": {
          "whse_name": {
            "type": "string",
            "description": "Warehouse name"
          },
          "whse_address": {
            "type": "string",
            "description": "Warehouse address"
          }
        },
        "x-examples": {
          "example": {
            "whse_name": "Main Warehouse",
            "whse_address": "ABC Street"
          }
        }
      },
      "UpdateCustomerRequest": {
        "title": "UpdateCustomerRequest",
        "type": "object",
        "description": "Update Customer",
        "x-examples": {
          "example": {
            "cust_name": "Three Trading Inc",
            "cust_status": 1
          }
        },
        "properties": {
          "cust_name": {
            "type": "string",
            "description": "Customer name or description"
          },
          "cust_status": {
            "type": "string",
            "description": "Customer status. 0 = Inactive and 1 = Active"
          }
        }
      },
      "UpdateEmployeeRequest": {
        "title": "UpdateEmployeeRequest",
        "type": "object",
        "description": "Update Employee",
        "x-examples": {
          "example": {
            "emp_name": "John",
            "shift": 3
          }
        },
        "properties": {
          "emp_name": {
            "type": "string",
            "description": "Employee name"
          },
          "shift": {
            "type": "integer",
            "description": "Shift"
          }
        }
      },
      "UpdateItemRequest": {
        "title": "UpdateItemRequest",
        "type": "object",
        "x-examples": {
          "example": {
            "item_desc": "6 inch block",
            "uom": "EA",
            "product_code": "FG-MA",
            "lot_tracked": 1,
            "unit_weight": 3,
            "item_status": 1
          }
        },
        "description": "Update Item",
        "properties": {
          "item_desc": {
            "type": "string",
            "description": "Item description"
          },
          "uom": {
            "type": "string",
            "description": "Unit of measurement of the item"
          },
          "product_code": {
            "type": "string",
            "description": "Product Code. Item Material classification."
          },
          "lot_tracked": {
            "type": "string",
            "description": "Item is lot tracked indicator. 0 = Inactive , 1 = Active"
          },
          "unit_weight": {
            "type": "string",
            "description": "The unit weight of item in Kilogram(KG)"
          },
          "item_status": {
            "type": "string",
            "description": "Is Item Active? 1 = Active, 0 = Not Active"
          }
        }
      },
      "UpdateJobRouteRequest": {
        "title": "UpdateJobRouteRequest",
        "type": "object",
        "description": "Update Job Route",
        "properties": {
          "oper_status": {
            "type": "string",
            "description": "Job Route status. 0 = Inactive, 1 = Active"
          },
          "wc_num": {
            "type": "string",
            "description": "Work center related to the production operation and job route"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          }
        },
        "x-examples": {
          "example": {
            "oper_status": "1",
            "notes": "A3 moved to zone2",
            "wc_num": "Stamping"
          }
        }
      },
      "UpdateMachineRequest": {
        "title": "UpdateMachineRequest",
        "type": "object",
        "description": "Update Machine",
        "x-examples": {
          "example": {
            "res_desc": "Drilling Machine",
            "res_status": 1
          }
        },
        "properties": {
          "res_desc": {
            "type": "string",
            "description": "Machine description"
          },
          "res_status": {
            "type": "boolean",
            "description": "Machine status. 0 = Inactive, 1 = Active"
          }
        }
      },
      "UpdateProductCodeRequest": {
        "title": "UpdateProductCodeRequest",
        "type": "object",
        "description": "Update Product Code",
        "properties": {
          "id": {
            "type": "string"
          },
          "product_desc": {
            "type": "string",
            "description": "Product description"
          },
          "product_status": {
            "type": "boolean",
            "description": "Product code status. 1 = Active, 0 = Inactive"
          }
        },
        "x-examples": {
          "example": {
            "product_desc": "Megatech-P100",
            "product_status": "1"
          }
        }
      },
      "UpdateReasonCodeRequest": {
        "title": "UpdateReasonCodeRequest",
        "type": "object",
        "properties": {
          "reason_desc": {
            "type": "string",
            "description": "Description of the reason code"
          }
        },
        "x-examples": {
          "example": {
            "reason_desc": "Damage goods"
          }
        },
        "description": "Update Reason Code"
      },
      "UpdateTaskRequest": {
        "title": "UpdateTaskRequest",
        "type": "object",
        "properties": {
          "task_desc": {
            "type": "string"
          }
        },
        "x-examples": {
          "example": {
            "task_desc": "Kaizen Activity"
          }
        },
        "description": "Update Task"
      },
      "UpdateTransferOrderRequest": {
        "title": "UpdateTransferOrderRequest",
        "type": "object",
        "properties": {
          "stat": {
            "type": "string",
            "description": "Status. O = Open, C = Completed"
          },
          "driver_name": {
            "type": "string",
            "description": "Driver's Name"
          },
          "schedule_receive_date": {
            "type": "string",
            "description": "Scheduled received date"
          },
          "schedule_ship_date": {
            "type": "string",
            "description": "Scheduled shipping date"
          },
          "pickup_date": {
            "type": "string",
            "description": "Pickup date"
          },
          "driver_contact": {
            "type": "string",
            "description": "Driver contact"
          },
          "vehicle_num": {
            "type": "string",
            "description": "Vehicle number"
          }
        },
        "description": "Update Transfer Order",
        "x-examples": {
          "example": {
            "stat": "O",
            "driver_name": "Jane",
            "schedule_receive_date": "2020-06-12",
            "schedule_ship_date": "2020-06-10",
            "pickup_date": "2020-06-10",
            "driver_contact": "0127878552",
            "vehicle_num": "VAA3702"
          }
        }
      },
      "UpdateUOMRequest": {
        "title": "UpdateUOMRequest",
        "type": "object",
        "description": "Update UOM",
        "x-examples": {
          "example": {
            "uom_desc": "Kilogram",
            "rounding": 2
          }
        },
        "properties": {
          "uom_desc": {
            "type": "string",
            "description": "Description of UOM"
          },
          "rounding": {
            "type": "string",
            "description": "Determines the number of decimal places the unit of measurement will be displayed"
          }
        }
      },
      "UpdateVendorRequest": {
        "title": "UpdateVendorRequest",
        "type": "object",
        "properties": {
          "vend_name": {
            "type": "string",
            "description": "Vendor Name"
          },
          "vend_status": {
            "type": "string",
            "description": "Vendor Status. 1 = Active, 0 = Inactive"
          }
        },
        "x-examples": {
          "example": {
            "vend_name": "MPH",
            "vend_status": 1
          }
        },
        "description": "Update Vendor"
      },
      "UpdateWorkCenterRequest": {
        "title": "UpdateWorkCenterRequest",
        "type": "object",
        "description": "Update Work Center",
        "properties": {
          "wc_desc": {
            "type": "string"
          },
          "wc_status": {
            "type": "string"
          }
        },
        "x-examples": {
          "example": {
            "wc_desc": "Assembly Station 1",
            "wc_status": 1
          }
        }
      },
      "UpdateJobOrderRequest": {
        "title": "UpdateJobOrderRequest",
        "type": "object",
        "description": "Update Job Order",
        "properties": {
          "cust_num": {
            "type": "string",
            "description": "Customer number"
          },
          "job_date": {
            "type": "string",
            "description": "Job Order creation date"
          },
          "start_date_plan": {
            "type": "string",
            "description": "Date to begin production"
          },
          "end_date_plan": {
            "type": "string",
            "description": "Target Date of production end"
          },
          "qty_released": {
            "type": "number",
            "description": "The quantity required to be produced"
          },
          "job_status": {
            "type": "string",
            "description": "Job status. O = Open, R = Released, C = Completed"
          },
          "notes": {
            "type": "string",
            "description": "Remarks"
          }
        },
        "x-examples": {
          "example": {
            "job_date": "2020-01-30",
            "start_date_plan": "2020-02-12",
            "end_date_plan": "2020-02-15",
            "cust_num": "C001",
            "qty_released": 30,
            "job_status": "R",
            "notes": "To be involve in drilling"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "tags": [
    {
      "name": "Customer"
    },
    {
      "name": "Warehouse"
    },
    {
      "name": "Location"
    },
    {
      "name": "Employee"
    },
    {
      "name": "Item"
    },
    {
      "name": "ItemLocation"
    },
    {
      "name": "Machine"
    },
    {
      "name": "JobRoute"
    },
    {
      "name": "ProductCode"
    },
    {
      "name": "ReasonCode"
    },
    {
      "name": "Task"
    },
    {
      "name": "TransferOrder"
    },
    {
      "name": "UOM"
    },
    {
      "name": "Vendor"
    },
    {
      "name": "WorkCenter"
    },
    {
      "name": "JobMaterial"
    },
    {
      "name": "JobOrder"
    }
  ]
}